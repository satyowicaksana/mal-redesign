{"version":3,"sources":["apis/jikan.ts","apis/server.ts","store/anime.ts","store/news.ts","store/index.ts","helpers/checker.tsx","helpers/formatter.tsx","helpers/styler.tsx","helpers/validator.tsx","hooks/useInterval.tsx","hooks/useScroll.tsx","hooks/useWindowSize.tsx","consts/options.ts","consts/windowSizes.ts","components/AnimeCard/index.tsx","components/ArticleCard/index.tsx","components/BannerCarousel/index.tsx","components/Carousel/index.tsx","components/CharacterCard/index.tsx","assets/images/apple-store-badge.png","assets/images/google-play-badge.png","assets/images/register-illustration.png","assets/images/no-result-illustration.png","components/Footer/const.ts","components/Footer/index.tsx","components/LoginModal/index.tsx","components/Navbar/index.tsx","components/ReviewCard/index.tsx","components/StaffCard/index.tsx","components/TopicCard/index.tsx","views/Anime/views/Characters/index.tsx","views/Anime/views/Forums/index.tsx","views/Anime/views/News/index.tsx","views/Anime/views/Overview/index.tsx","views/Anime/views/Recommendations/index.tsx","views/Anime/views/Reviews/index.tsx","views/Anime/views/Staff/index.tsx","views/Anime/index.tsx","views/Animes/index.tsx","views/Home/index.tsx","views/NotFound/index.tsx","views/Register/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseUrl","jikanAPI","getCurrentSeason","getTopAiringAnimes","getAnime","id","getAnimes","query","getCharactersAndStaff","getReviews","getArticles","getTopics","getRecommendations","serverAPI","getFeaturedNewsList","initialState","currentSeason","loading","topAiringAnimes","data","animes","pagination","pageSize","total","anime","charactersAndStaff","characters","staffList","reviews","articles","topics","recommendations","createAsyncThunk","a","fetch","response","json","slice","top","results","last_page","convertedData","staff","animeSlice","createSlice","name","reducers","extraReducers","builder","addCase","pending","state","error","fulfilled","payload","rejected","action","message","selectCurrentSeason","selectTopAiringAnimes","selectAnime","selectAnimes","selectCharactersAndStaff","selectReviews","selectArticles","selectTopics","selectRecommendations","newsSlice","featuredNewsList","selectFeaturedNewsList","news","reducer","combineReducers","store","configureStore","checked","isFetched","Array","isArray","length","formatter","htmlDecode","input","e","document","createElement","innerHTML","childNodes","nodeValue","objectToQuery","object","queries","Object","entries","key","value","push","join","styler","getScoreColor","score","validator","email","rule","Promise","reject","test","resolve","password","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useScroll","useState","lastScrollTop","bodyOffset","body","getBoundingClientRect","scrollY","scrollX","left","scrollDirection","setState","handleScrollEvent","useCallback","prevState","prevLastScrollTop","scrollListener","window","addEventListener","removeEventListener","useWindowSize","width","height","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","options","genres","revGenres","1","2","4","8","10","14","7","22","24","25","27","36","41","formats","TV","OVA","Movie","Special","ONA","Music","revFormats","tv","ova","movie","special","ona","music","sorts","Title","Format","Score","Date","revSorts","title","type","start_date","windowSizes","xl","min","lg","max","md","sm","xs","Text","Typography","Paragraph","Link","AnimeCard","seasonAnime","topAiringAnime","recommendation","props","history","useHistory","popoverOpen","setPopoverOpen","className","Button","active","renderCard","src","image_url","alt","rated","strong","ellipsis","onVisibleChange","visible","placement","content","gutter","justify","wrap","level","color","producers","toUpperCase","episodes","map","genre","i","synopsis","onClick","mal_id","align","recommendation_count","ArticleCard","article","imageURL","rows","moment","date","format","BannerCarousel","newsList","selectedItemIndex","setSelectedItemIndex","autoplay","setAutoplay","handleClickRight","onMouseEnter","onMouseLeave","open","link","description","CustomCarousel","showArrows","carouselRef","ref","prev","next","CharacterCard","character","span","paragraph","hasRightSection","voice_actors","url","role","language","splittedUrl","split","splice","getLargeVoiceActorImage","linkGroups","text","Footer","linkGroup","appleStoreBadge","googlePlayBadge","LoginModal","Form","useForm","form","flex","onFinish","values","alert","JSON","stringify","Item","rules","size","placeholder","Password","shouldUpdate","htmlType","disabled","isFieldsTouched","getFieldsError","filter","errors","Panel","Collapse","links","subLinks","Navbar","search","setSearch","isLoginModalVisible","setIsLoginModalVisible","isDrawerVisible","setIsDrawerVisible","subLink","onChange","target","suffix","icon","onCancel","closable","onClose","ghost","header","href","ReviewCard","review","useSelector","reviewer","username","helpful_count","scores","overall","episodes_seen","overlay","style","whiteSpace","expandable","symbol","replace","Avatar","StaffCard","positions","TopicCard","topic","author_name","author_url","date_posted","replies","last_post","fromNow","Characters","dispatch","useDispatch","totalShowedCharacters","setTotalShowedCharacters","filteredCharacters","setFilteredCharacters","voiceActor","hasMore","loader","loadMore","setTimeout","threshold","from","keys","Forums","checker","topic_id","News","Overview","renderTitle","Recommendations","Reviews","Staff","infoColumnKeys","Anime","useParams","menu","infoColumns","charAt","dataIndex","generateReferenceText","references","reference","renderAnimeTitle","tooltip","title_english","renderActionButtons","shape","rank","popularity","members","toLocaleString","scored_by","rowKey","dataSource","aired","licensors","studios","string","getAnimeInfoDataSource","columns","mode","selectedKeys","exact","path","Option","Select","Home","page","setPage","getApiQuery","params","URLSearchParams","location","queryObj","get","q","order_by","end_date","sort","limit","setFieldsValue","genreValue","formatValue","order","Number","setFormValuesByParams","listen","submitForm","newPage","getFieldsValue","genreLabel","formatLabel","year","handleSubmitSearch","getFieldValue","submit","onValuesChange","changedValues","onKeyDown","allowClear","picker","disabledDate","noResultIllustration","resetFields","showSizeChanger","carouselCardColumn","setCarouselCardColumn","notification","season_name","season_year","Carousel","dots","Math","ceil","j","NotFound","Register","registerForm","validateTrigger","help","goBack","registerIllustration","App","showNavbar","setShowNavbar","showFooter","setShowFooter","pathname","startsWith","scrollTo","Animes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.42cd3284.chunk.js","sourcesContent":["const baseUrl = 'https://api.jikan.moe/v3'\n\nconst jikanAPI = {\n  getCurrentSeason: `${baseUrl}/season`,\n  getTopAiringAnimes: `${baseUrl}/top/anime/1/airing`,\n  getAnime: (id: string) => `${baseUrl}/anime/${id}`,\n  getAnimes: (query: string) => `${baseUrl}/search/anime?${query}`,\n  getCharactersAndStaff: (id: string) => `${baseUrl}/anime/${id}/characters_staff`,\n  getReviews: (id: string) => `${baseUrl}/anime/${id}/reviews`,\n  getArticles: (id: string) => `${baseUrl}/anime/${id}/news`,\n  getTopics: (id: string) => `${baseUrl}/anime/${id}/forum`,\n  getRecommendations: (id: string) => `${baseUrl}/anime/${id}/recommendations`\n}\n\nexport default jikanAPI","const baseUrl = 'https://mal-redesign-server.herokuapp.com'\n//const baseUrl = 'http://localhost:5000'\n\nconst serverAPI = {\n  getFeaturedNewsList: `${baseUrl}/v1/news`,\n}\n\nexport default serverAPI","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { RootState } from 'store'\nimport { Anime, TopAiringAnime, Season, SearchedAnime, CharactersAndStaff, Review, Character, Staff, Article, Topic, Recommendation } from 'interfaces/anime'\nimport { jikanAPI } from 'apis'\n\nconst SEARCHED_ANIME_PAGE_SIZE = 20\n\ntype AnimeState = {\n  currentSeason: {\n    data?: Season\n    loading: boolean\n    error?: string\n  }\n  topAiringAnimes: {\n    data: TopAiringAnime[]\n    loading: boolean\n    error?: string\n  }\n  animes: {\n    data: SearchedAnime[]\n    pagination: {\n      pageSize: number\n      total: number\n    }\n    loading: boolean\n    error?: string\n  }\n  anime: {\n    data?: Anime\n    loading: boolean\n    error?: string\n  }\n  charactersAndStaff: {\n    data?: CharactersAndStaff\n    loading: boolean\n    error?: string\n  }\n  reviews: {\n    data: Review[]\n    loading: boolean\n    error?: string\n  }\n  articles: {\n    data: Article[]\n    loading: boolean\n    error?: string\n  }\n  topics: {\n    data: Topic[]\n    loading: boolean\n    error?: string\n  }\n  recommendations: {\n    data: Recommendation[]\n    loading: boolean\n    error?: string\n  }\n}\n\nlet initialState: AnimeState = {\n  currentSeason: {\n    loading: false\n  },\n  topAiringAnimes: {\n    data: [],\n    loading: false\n  },\n  animes: {\n    data: [],\n    pagination: {\n      pageSize: SEARCHED_ANIME_PAGE_SIZE,\n      total: 0\n    },\n    loading: false\n  },\n  anime: {\n    loading: false\n  },\n  charactersAndStaff: {\n    data: {\n      characters: [],\n      staffList: []\n    },\n    loading: false\n  },\n  reviews: {\n    data: [],\n    loading: false\n  },\n  articles: {\n    data: [],\n    loading: false\n  },\n  topics: {\n    data: [],\n    loading: false\n  },\n  recommendations: {\n    data: [],\n    loading: false\n  }\n}\n\nexport const getCurrentSeason = createAsyncThunk(\n  'anime/getCurrentSeason',\n  async () => {\n    const response = await fetch(jikanAPI.getCurrentSeason)\n    const data: Season = await response.json()\n    return {\n      ...data,\n      anime: data.anime.slice(0, 24)\n    }\n  }\n)\n\nexport const getTopAiringAnimes = createAsyncThunk(\n  'anime/getTopAiringAnimes',\n  async () => {\n    const response = await fetch(jikanAPI.getTopAiringAnimes)\n    const data: {\n      top: TopAiringAnime[]\n    } = await response.json()\n    return data.top.slice(0, 24)\n  }\n)\n\nexport const getAnimes = createAsyncThunk(\n  'anime/getAnimes',\n  async (query: string) => {\n    const response = await fetch(jikanAPI.getAnimes(query))\n    const data: {\n      results: SearchedAnime[],\n      last_page: number\n    } = await response.json()\n    return {\n      data: data.results || [],\n      pagination: {\n        pageSize: SEARCHED_ANIME_PAGE_SIZE,\n        total: SEARCHED_ANIME_PAGE_SIZE * data.last_page\n      }\n    }\n  }\n)\n\nexport const getAnime = createAsyncThunk(\n  'anime/getAnime',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getAnime(id))\n    const data: Anime = await response.json()\n    return data\n  }\n)\n\nexport const getCharactersAndStaff = createAsyncThunk(\n  'anime/getCharactersAndStaff',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getCharactersAndStaff(id))\n    const data: {\n      characters: Character[],\n      staff: Staff[]\n    } = await response.json()\n    const convertedData: CharactersAndStaff = {\n      ...data,\n      staffList: data.staff\n    }\n    return convertedData\n  }\n)\n\nexport const getReviews = createAsyncThunk(\n  'anime/getReviews',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getReviews(id))\n    const data: {\n      reviews: Review[]\n    } = await response.json()\n    return data.reviews\n  }\n)\n\nexport const getArticles = createAsyncThunk(\n  'anime/getArticles',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getArticles(id))\n    const data: {\n      articles: Article[]\n    } = await response.json()\n    return data.articles\n  }\n)\n\nexport const getTopics = createAsyncThunk(\n  'anime/getTopics',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getTopics(id))\n    const data: {\n      topics: Topic[]\n    } = await response.json()\n    return data.topics\n  }\n)\n\nexport const getRecommendations = createAsyncThunk(\n  'anime/getRecommendations',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getRecommendations(id))\n    const data: {\n      recommendations: Recommendation[]\n    } = await response.json()\n    return data.recommendations\n  }\n)\n\n\nconst animeSlice = createSlice({\n  name: 'anime',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getCurrentSeason.pending, state => {\n      state.currentSeason.loading = true\n      delete state.currentSeason.error\n    })\n    builder.addCase(getCurrentSeason.fulfilled, (state, { payload }) => {\n      state.currentSeason.data = payload\n      state.currentSeason.loading = false\n    })\n    builder.addCase(getCurrentSeason.rejected, (state, action) => {\n      state.currentSeason.loading = false\n      state.currentSeason.error = action.error.message\n    })\n    builder.addCase(getTopAiringAnimes.pending, state => {\n      state.topAiringAnimes.loading = true\n      delete state.topAiringAnimes.error\n    })\n    builder.addCase(getTopAiringAnimes.fulfilled, (state, { payload }) => {\n      state.topAiringAnimes.data = payload\n      state.topAiringAnimes.loading = false\n    })\n    builder.addCase(getTopAiringAnimes.rejected, (state, action) => {\n      state.topAiringAnimes.loading = false\n      state.topAiringAnimes.error = action.error.message\n    })\n    builder.addCase(getAnimes.pending, state => {\n      state.animes.loading = true\n      delete state.animes.error\n    })\n    builder.addCase(getAnimes.fulfilled, (state, { payload }) => {\n      state.animes.data = payload.data\n      state.animes.pagination = payload.pagination\n      state.animes.loading = false\n    })\n    builder.addCase(getAnimes.rejected, (state, action) => {\n      state.animes.loading = false\n      state.animes.error = action.error.message\n    })\n    builder.addCase(getAnime.pending, state => {\n      state.anime.loading = true\n      delete state.anime.error\n    })\n    builder.addCase(getAnime.fulfilled, (state, { payload }) => {\n      state.anime.data = payload\n      state.anime.loading = false\n    })\n    builder.addCase(getAnime.rejected, (state, action) => {\n      state.anime.loading = false\n      state.anime.error = action.error.message\n    })\n    builder.addCase(getCharactersAndStaff.pending, state => {\n      state.charactersAndStaff.loading = true\n      delete state.charactersAndStaff.error\n    })\n    builder.addCase(getCharactersAndStaff.fulfilled, (state, { payload }) => {\n      state.charactersAndStaff.data = payload\n      state.charactersAndStaff.loading = false\n    })\n    builder.addCase(getCharactersAndStaff.rejected, (state, action) => {\n      state.charactersAndStaff.loading = false\n      state.charactersAndStaff.error = action.error.message\n    })\n    builder.addCase(getReviews.pending, state => {\n      state.reviews.loading = true\n      delete state.topAiringAnimes.error\n    })\n    builder.addCase(getReviews.fulfilled, (state, { payload }) => {\n      state.reviews.data = payload\n      state.reviews.loading = false\n    })\n    builder.addCase(getReviews.rejected, (state, action) => {\n      state.reviews.loading = false\n      state.reviews.error = action.error.message\n    })\n    builder.addCase(getArticles.pending, state => {\n      state.articles.loading = true\n      delete state.articles.error\n    })\n    builder.addCase(getArticles.fulfilled, (state, { payload }) => {\n      state.articles.data = payload\n      state.articles.loading = false\n    })\n    builder.addCase(getArticles.rejected, (state, action) => {\n      state.articles.loading = false\n      state.articles.error = action.error.message\n    })\n    builder.addCase(getTopics.pending, state => {\n      state.topics.loading = true\n      delete state.topics.error\n    })\n    builder.addCase(getTopics.fulfilled, (state, { payload }) => {\n      state.topics.data = payload\n      state.topics.loading = false\n    })\n    builder.addCase(getTopics.rejected, (state, action) => {\n      state.topics.loading = false\n      state.topics.error = action.error.message\n    })\n    builder.addCase(getRecommendations.pending, state => {\n      state.recommendations.loading = true\n      delete state.recommendations.error\n    })\n    builder.addCase(getRecommendations.fulfilled, (state, { payload }) => {\n      state.recommendations.data = payload\n      state.recommendations.loading = false\n    })\n    builder.addCase(getRecommendations.rejected, (state, action) => {\n      state.recommendations.loading = false\n      state.recommendations.error = action.error.message\n    })\n  },\n})\n\nexport const selectCurrentSeason = (state: RootState) => state.anime.currentSeason\nexport const selectTopAiringAnimes = (state: RootState) => state.anime.topAiringAnimes\nexport const selectAnime = (state: RootState) => state.anime.anime\nexport const selectAnimes = (state: RootState) => state.anime.animes\nexport const selectCharactersAndStaff = (state: RootState) => state.anime.charactersAndStaff\nexport const selectReviews = (state: RootState) => state.anime.reviews\nexport const selectArticles = (state: RootState) => state.anime.articles\nexport const selectTopics = (state: RootState) => state.anime.topics\nexport const selectRecommendations = (state: RootState) => state.anime.recommendations\n\nexport default animeSlice.reducer","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { RootState } from 'store'\nimport { News } from 'interfaces/news'\nimport { serverAPI } from 'apis'\n\ntype NewsState = {\n  featuredNewsList: {\n    data: News[]\n    loading: boolean\n    error?: string\n  }\n}\n\nlet initialState: NewsState = {\n  featuredNewsList: {\n    data: [],\n    loading: false\n  }\n}\n\nexport const getFeaturedNewsList = createAsyncThunk(\n  'news/getFeaturedNewsList',\n  async () => {\n    const response = await fetch(serverAPI.getFeaturedNewsList)\n    const data: News[] = await response.json()\n    return data || []\n  }\n)\n\nconst newsSlice = createSlice({\n  name: 'news',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getFeaturedNewsList.pending, state => {\n      state.featuredNewsList.loading = true\n      delete state.featuredNewsList.error\n    })\n    builder.addCase(getFeaturedNewsList.fulfilled, (state, { payload }) => {\n      state.featuredNewsList.data = payload\n      state.featuredNewsList.loading = false\n    })\n    builder.addCase(getFeaturedNewsList.rejected, (state, action) => {\n      state.featuredNewsList.loading = false\n      state.featuredNewsList.error = action.error.message\n    })\n  },\n})\n\nexport const selectFeaturedNewsList = (state: RootState) => state.news.featuredNewsList\n\nexport default newsSlice.reducer","import { configureStore, Action, combineReducers } from '@reduxjs/toolkit'\nimport { ThunkAction } from 'redux-thunk'\n\nimport anime from 'store/anime'\nimport news from 'store/news'\n\nconst reducer = combineReducers({\n  anime,\n  news\n})\n\nexport type RootState = ReturnType<typeof reducer>\n\nconst store = configureStore({\n  reducer\n})\n\nexport type AppDispatch = typeof store.dispatch\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store","// check if store object is fetched and not empty\nconst isFetched = ({\n  data,\n  loading\n} : {\n  data?: any\n  loading: boolean\n}) => {\n  if(loading) return false\n  if(Array.isArray(data)) return data.length > 0\n  return !!data\n}\n\nconst checked = {\n  isFetched\n}\n\nexport default checked","const htmlDecode = (input: string) => {\n  var e = document.createElement('div');\n  e.innerHTML = input;\n  return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n}\n\nconst objectToQuery = (object: {[key: string]: any}) => {\n  let queries = []\n  for (const [key, value] of Object.entries(object)) {\n    if(Array.isArray(object[key])) object[key].length > 0 && queries.push(`${key}=${value}`)\n    else object[key] && queries.push(`${key}=${value}`)\n  }\n  return queries.join('&')\n}\n\nconst formatter = {\n  htmlDecode,\n  objectToQuery\n}\n\nexport default formatter","const getScoreColor = (score: number) : 'success' | 'warning' | 'error' => {\n  if(score < 4) return 'error'\n  if(score < 7) return 'warning'\n  return 'success'\n}\n\nconst styler = {\n  getScoreColor,\n}\n\nexport default styler","import { RuleObject } from 'rc-field-form/lib/interface';\n\nconst email = (rule: RuleObject, value: string) => {\n  if(!value) {\n    return Promise.reject('Email cannot be empty')\n  }\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  if(!re.test(value)) {\n    return Promise.reject('Email format is invalid')\n  }\n  return Promise.resolve()\n}\n\nconst password = (rule: RuleObject, value: string) => {\n  if(!value) {\n    return Promise.reject('Password cannot be empty')\n  }\n  return Promise.resolve()\n}\n\nconst validator = {\n  email,\n  password\n}\n\nexport default validator","import { useRef, useEffect } from 'react'\n\nconst useInterval = (callback: () => void, delay: number) => {\n  const savedCallback: any = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval","import { useState, useCallback, useEffect } from 'react'\n\nconst useScroll = () => {\n  const [state, setState] = useState({\n    lastScrollTop: 0,\n    bodyOffset: document.body.getBoundingClientRect(),\n    scrollY: document.body.getBoundingClientRect().top,\n    scrollX: document.body.getBoundingClientRect().left,\n    scrollDirection: '', // down, up\n  })\n\n  const handleScrollEvent = useCallback((e) => {\n    setState((prevState) => {\n      const prevLastScrollTop = prevState.lastScrollTop\n      const bodyOffset = document.body.getBoundingClientRect()\n\n      return {\n        lastScrollTop: -bodyOffset.top,\n        bodyOffset: bodyOffset,\n        scrollY: -bodyOffset.top,\n        scrollX: bodyOffset.left,\n        scrollDirection: prevLastScrollTop > -bodyOffset.top ? 'up' : 'down',\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = (e: Event) => {\n      handleScrollEvent(e)\n    }\n    window.addEventListener('scroll', scrollListener)\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n  }, [handleScrollEvent])\n\n  return {\n    scrollY: state.scrollY,\n    scrollX: state.scrollX,\n    scrollDirection: state.scrollDirection,\n  }\n}\n\nexport default useScroll","import { useState, useEffect } from 'react'\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{\n    width: number,\n    height: number\n  }>({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport default useWindowSize","const genres = {\n  'Action': 1,\n  'Adventure': 2,\n  'Comedy': 4,\n  'Drama': 8,\n  'Fantasy': 10,\n  'Horror': 14,\n  'Mystery': 7,\n  'Romance': 22,\n  'Sci-Fi': 24,\n  'Shoujo': 25,\n  'Shounen': 27,\n  'Slice of Life': 36,\n  'Thriller': 41\n}\n\nconst revGenres = {\n  1: 'Action',\n  2: 'Adventure',\n  4: 'Comedy',\n  8: 'Drama',\n  10: 'Fantasy',\n  14: 'Horror',\n  7: 'Mystery',\n  22: 'Romance',\n  24: 'Sci-Fi',\n  25: 'Shoujo',\n  27: 'Shounen',\n  36: 'Slice of Life',\n  41: 'Thriller'\n}\n\nconst formats = {\n  TV: 'tv',\n  OVA: 'ova',\n  Movie: 'movie',\n  Special: 'special',\n  ONA: 'ona',\n  Music: 'music'\n}\n\nconst revFormats = {\n  tv: 'TV',\n  ova: 'OVA',\n  movie: 'Movie',\n  special: 'Special',\n  ona: 'ONA',\n  music: 'Music'\n}\n\nconst sorts = {\n  Title: 'title',\n  Format: 'type',\n  Score: 'score',\n  Date: 'start_date',\n}\n\nconst revSorts = {\n  title: 'Title',\n  type: 'Format',\n  score: 'Score',\n  start_date: 'Date',\n}\n\nconst options = {\n  genres,\n  revGenres,\n  formats,\n  revFormats,\n  sorts,\n  revSorts\n}\n\nexport default options;","const windowSizes = {\n  xl: { min: 1200 },\n  lg: { min: 992, max: 1199 },\n  md: { min: 768, max: 991 },\n  sm: { min: 576, max: 767 },\n  xs: { max: 575 }\n}\n\n//@xl: ~\"only screen and (min-width: 1200px)\";\n//@lg: ~\"only screen and (min-width: 992px) and (max-width: 1119px)\";\n//@md: ~\"only screen and (min-width: 768px) and (max-width: 991px)\";\n//@sm: ~\"only screen and (min-width: 576px) and (max-width: 767px)\";\n//@xs: ~\"only screen and (max-width: 575px)\";\n\nexport default windowSizes;","import { HTMLAttributes, useState } from 'react'\nimport { Skeleton, Typography, Popover, Row, Col, Tag } from 'antd';\nimport { FaStar, FaUserCheck } from 'react-icons/fa'\n\nimport { Recommendation, SearchedAnime, SeasonAnime, TopAiringAnime } from 'interfaces/anime'\nimport { styler } from 'helpers'\nimport './style.less';\nimport { useHistory } from 'react-router';\nimport { useWindowSize } from 'hooks';\nimport { windowSizes } from 'consts';\n\nconst { Text, Paragraph, Title, Link } = Typography;\n\ninterface AnimeCardProps extends HTMLAttributes<HTMLDivElement> {\n  anime?: SearchedAnime\n  seasonAnime?: SeasonAnime\n  topAiringAnime?: TopAiringAnime\n  recommendation?: Recommendation\n  loading?: boolean\n}\n\nconst AnimeCard = ({\n  anime,\n  seasonAnime,\n  topAiringAnime,\n  recommendation,\n  loading,\n  ...props\n}: AnimeCardProps) => {\n  const history = useHistory()\n  const { width } = useWindowSize()\n  const [popoverOpen, setPopoverOpen] = useState(false)\n\n  if(!anime && !seasonAnime && !topAiringAnime && !recommendation) return (\n    <div {...props} className='anime-card no-pointer'>\n      <Skeleton.Button active={loading} className='skeleton-stretch anime-card-skeleton'/>\n    </div>\n  )\n\n  const renderPopoverContent = () => {\n    if(seasonAnime) {\n      return (\n        <div className='anime-card-popover-container p-2'>\n          <Row gutter={16} justify='space-between' wrap={false} className='mb-1'>\n            <Col>\n              <Title level={5}>{seasonAnime.title}</Title>\n            </Col>\n            <Col>\n              <Tag color={styler.getScoreColor(seasonAnime.score)}><FaStar/> {seasonAnime.score}</Tag>\n            </Col>\n          </Row>\n          {seasonAnime.producers[0] && <Link strong>{seasonAnime.producers[0].name.toUpperCase()}</Link>}\n          {seasonAnime.episodes && <div><Text className='typography-fade'>{seasonAnime.episodes} episodes</Text></div>}\n          {seasonAnime.genres\n          && <Row gutter={8} className='mt-1'>\n              {seasonAnime.genres.map((genre, i) => (\n                <Col key={i} className='mb-1'>\n                  <Tag color='blue' className='clickable'>{genre.name}</Tag>\n                </Col>\n              ))}\n            </Row>}\n          <div className='anime-card-popover-synopsis-container mb-1'>\n            <Paragraph>{seasonAnime.synopsis}</Paragraph>\n          </div>\n          <Row justify='end'>\n            <Col>\n              <Link onClick={() => history.push(`/anime/${seasonAnime.mal_id}`)} className='typography-small' strong>VIEW DETAIL</Link>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    if(topAiringAnime) {\n      return (\n        <div className='anime-card-popover-container p-2'>\n          <Row gutter={16} justify='space-between' wrap={false} className='mb-1'>\n            <Col>\n              <Title level={5}>{topAiringAnime.title}</Title>\n            </Col>\n            <Col>\n              <Tag color={styler.getScoreColor(topAiringAnime.score)}><FaStar/> {topAiringAnime.score}</Tag>\n            </Col>\n          </Row>\n          {/*{topAiringAnime.producers[0] && <Link strong>{topAiringAnime.producers[0].name.toUpperCase()}</Link>}*/}\n          {topAiringAnime.start_date && <div className='mb-1'><Tag color='blue'>{topAiringAnime.start_date}</Tag></div>}\n          {topAiringAnime.episodes && <div><Text className='typography-fade'>{topAiringAnime.episodes} episodes</Text></div>}\n          {/*{topAiringAnime.genres\n          && <Row gutter={8} className='mt-1'>\n              {topAiringAnime.genres.map((genre, i) => (\n                <Col key={i} className='mb-1'>\n                  <Tag color='blue' className='clickable'>{genre.name}</Tag>\n                </Col>\n              ))}\n            </Row>}\n          <div className='anime-card-popover-synopsis-container mb-1'>\n            <Paragraph>{topAiringAnime.synopsis}</Paragraph>\n          </div>*/}\n          <Row justify='end'>\n            <Col>\n              <Link onClick={() => history.push(`/anime/${topAiringAnime.mal_id}`)} className='typography-small' strong>VIEW DETAIL</Link>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    if(recommendation) {\n      return (\n        <div className='anime-card-popover-container p-2'>\n          <Title level={5} className='mb-1'>{recommendation.title}</Title>\n          <Row align='middle' gutter={8}>\n            <Col>\n              <Tag color='success'><Text><FaUserCheck/> {recommendation.recommendation_count}</Text></Tag>\n            </Col>\n            <Col>\n              <Link onClick={() => history.push(`/anime/${recommendation.mal_id}`)}  className='typography-small'>VIEW DETAIL</Link>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n  }\n\n  const renderCard = () => (\n    <div {...props} className={`anime-card ${popoverOpen ? 'hovered' : ''}`}>\n      <img src={anime?.image_url || seasonAnime?.image_url || topAiringAnime?.image_url || recommendation?.image_url} alt='' className={`anime-card-image ${anime?.rated === 'Rx' ? 'r-18' : ''}`}/>\n      {anime?.rated === 'Rx' && <div className='anime-card-r-18-logo'>\n        <Title>R18</Title>\n      </div>}\n      <div className='anime-card-title-container-blur'/>\n      <div className='anime-card-title-container p-1'>\n        <Paragraph strong className='anime-card-title' ellipsis >{anime?.title || seasonAnime?.title || topAiringAnime?.title || recommendation?.title}</Paragraph>\n      </div>\n    </div>\n  )\n\n  if(width > windowSizes.md.max) return (\n    <Popover onVisibleChange={visible => setPopoverOpen(visible)} placement='rightTop' content={renderPopoverContent()}>\n      {renderCard()}\n    </Popover>\n  );\n\n  return renderCard()\n}\n\nexport default AnimeCard;","import { HTMLAttributes } from 'react';\nimport { Row, Col, Typography, Skeleton } from 'antd';\nimport { FaRegCalendarAlt } from 'react-icons/fa'\nimport moment from 'moment'\n\nimport { windowSizes } from 'consts'\nimport { useWindowSize } from 'hooks'\nimport { News } from 'interfaces/news'\nimport './style.less';\nimport { Article } from 'interfaces/anime';\n\nconst { Title, Text } = Typography;\n\ninterface ArticleCardProps extends HTMLAttributes<HTMLDivElement> {\n  article?: Article\n  news?: News\n  loading?: boolean\n}\n\nconst ArticleCard = ({\n  article,\n  news,\n  loading,\n  ...props\n}: ArticleCardProps) => {\n  const { width } = useWindowSize();\n\n  if(!article && !news) return (\n    <Row {...props} className='article-card'>\n      <Col xs={8} md={12}>\n        <Skeleton.Button active={loading} className='skeleton-stretch'/>\n      </Col>\n      <Col xs={16} md={12} className='article-card-info-container p-2'>\n        <Skeleton active={loading}/>\n      </Col>\n    </Row>\n  )\n\n  return (\n    <Row {...props} className='article-card'>\n      <Col xs={8} lg={12}>\n        <img src={article?.image_url || news?.imageURL} alt='' className='article-card-image'/>\n      </Col>\n      <Col xs={16} lg={12} className='article-card-info-container p-2'>\n        <Title level={4} ellipsis={{rows: width < windowSizes.md.min ? 3 : 4}}>\n        {article?.title || news?.title}\n        </Title>\n        {article && (\n          <Row gutter={4}>\n            <Col className='centered-flex'>\n              <FaRegCalendarAlt className='article-card-calendar-icon'/>\n            </Col>\n            <Col>\n              <Text>{moment(article.date).format('MMM DD, YYYY')}</Text>\n            </Col>\n          </Row>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default ArticleCard;","import { useState } from 'react';\nimport { Row, Col, Typography, Tag, Skeleton } from 'antd';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\n\nimport { useInterval } from 'hooks'\nimport { News } from 'interfaces/news'\nimport './style.less';\n\nconst { Paragraph, Title } = Typography\n\ntype BannerCarouselProps = {\n  newsList: News[]\n  loading?: boolean\n}\n\nconst BannerCarousel = ({\n  newsList,\n  loading\n}: BannerCarouselProps) => {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(0);\n  const [autoplay, setAutoplay] = useState(true);\n\n  useInterval(() => {\n    if(autoplay && newsList.length > 0) {\n      handleClickRight();\n    }\n  }, 4000);\n\n  const handleClickRight = () => {\n    if(selectedItemIndex === newsList.length - 1) {\n      setSelectedItemIndex(0);\n    } else {\n      setSelectedItemIndex(selectedItemIndex + 1);\n    }\n  }\n\n  const handleClickLeft = () => {\n    if(selectedItemIndex === 0) {\n      setSelectedItemIndex(newsList.length - 1);\n    } else {\n      setSelectedItemIndex(selectedItemIndex - 1);\n    }\n  }\n\n\n  return (\n    <div className='banner-carousel-wrapper'>\n      {!loading\n      && newsList.map((news, i) => (\n        <img key={i} src={newsList[i].imageURL} alt='' className={`banner-carousel-background-image ${selectedItemIndex === i ? 'selected' : ''}`} />\n      ))}\n      <div className='content-container pt-4 pb-5'>\n        <div\n          onMouseEnter={() => setAutoplay(false)}\n          onMouseLeave={() => setAutoplay(true)}\n          className='banner-carousel-cards-container'\n        >\n          {newsList.length === 0 || loading\n          ? <div \n            className='banner-carousel-card selected loading'>\n              <Row className='banner-carousel-card-content-container'>\n                <Col md={14} xs={24}>\n                  <Skeleton.Button active={loading} className='skeleton-stretch'/>\n                </Col>\n                <Col md={10} xs={24} className='banner-carousel-card-info-container p-3'>\n                  <Skeleton active={loading}/>\n                </Col>\n              </Row>\n            </div>\n          : newsList.map((news, i) => (\n            <div\n              key={i}\n              onClick={() => window.open(news.link, '_blank')}\n              className={`banner-carousel-card ${selectedItemIndex === i ? 'selected' : ''}`}\n            >\n              <Row>\n                <Col md={14} xs={24}>\n                  <img src={news.imageURL} alt='' className='banner-carousel-card-image' />\n                </Col>\n                <Col md={10} xs={24} className='banner-carousel-card-info-container p-3'>\n                  <div>\n                    <Row gutter={8} className='mb-2'>\n                      <Col>\n                        <Tag color='blue'>FEATURED</Tag>\n                      </Col>\n                      <Col>\n                        <Tag color='blue'>NEWS</Tag>\n                      </Col>\n                    </Row>\n                    <Title level={2} ellipsis={{rows: 3}} className='mb-2'>{news.title}</Title>\n                    <Paragraph ellipsis={{rows: 5}} className='desktop mb-2'>{news.description}</Paragraph>\n                  </div>\n                  <Row gutter={8}>\n                    {newsList.map((news, i) => (\n                      <Col key={i}>\n                        <div className={`banner-carousel-pointer ${selectedItemIndex === i ? 'selected' : ''}`}/>\n                      </Col>\n                    ))}\n                  </Row>\n                </Col>\n              </Row>\n            </div>\n          )) }\n          {!loading && newsList.length > 0\n          && <>\n              <FaChevronLeft onClick={handleClickLeft} className='banner-carousel-left-icon' />\n              <FaChevronRight onClick={handleClickRight} className='banner-carousel-right-icon' />\n            </>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BannerCarousel;","import { useRef } from 'react';\nimport { Carousel, CarouselProps } from 'antd';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\n\nimport './style.less';\n\ninterface CustomCarouselProps extends CarouselProps {\n  showArrows?: boolean\n}\n\nconst CustomCarousel = ({\n  showArrows = true,\n  ...props\n}: CustomCarouselProps) => {\n  const carouselRef = useRef<any>();\n\n  const handleClickRight = () => {\n    carouselRef.current?.next();\n  }\n\n  const handleClickLeft = () => {\n    carouselRef.current?.prev();\n  }\n\n  return (\n    <div className='carousel-wrapper'>\n      <Carousel\n        {...props}\n        ref={ref => {\n          carouselRef.current = ref;\n        }}\n      />\n      {showArrows\n      && <><FaChevronLeft onClick={handleClickLeft} className='carousel-left-icon' />\n      <FaChevronRight onClick={handleClickRight} className='carousel-right-icon' /></>}\n    </div>\n  );\n}\n\nexport default CustomCarousel;","import { HTMLAttributes } from 'react';\nimport { Row, Col, Typography, Skeleton } from 'antd';\n\nimport { Character } from 'interfaces/anime'\nimport './style.less';\n\nconst { Text, Link, Paragraph  } = Typography;\n\ninterface CharacterCardProps extends HTMLAttributes<HTMLDivElement> {\n  character?: Character\n  loading?: boolean\n}\n\nconst CharacterCard = ({\n  character,\n  loading,\n  ...props\n}: CharacterCardProps) => {\n\n  if(!character) {\n    return (\n      <Row {...props} className='character-card'>\n        <Col xs={8} md={4}>\n          <Skeleton.Button active={loading} className='skeleton-stretch'/>\n        </Col>\n        <Col span={16} className='p-2'>\n          <Skeleton active={loading} paragraph={{rows: 1}}/>\n        </Col>\n        <Col xs={8} md={4}>\n          <Skeleton.Button active={loading} className='skeleton-stretch'/>\n        </Col>\n      </Row>\n    );\n  }\n\n  const getLargeVoiceActorImage = () => {\n    const splittedUrl = character.voice_actors[0].image_url.split(\"/\")\n    splittedUrl.splice(3, 2)\n    return splittedUrl.join('/').split('?')[0]\n  }\n\n  const hasRightSection = character.voice_actors[0]\n\n  return (\n    <Row {...props} className='character-card'>\n      <Col span={4}>\n        <img src={character.image_url} alt='' className='character-card-image'/>\n      </Col>\n      <Col span={16} className='character-card-info-container p-2'>\n        <Row gutter={8} justify='space-between' wrap={false}>\n          <Col span={12}>\n            <Paragraph ellipsis={{rows: 2}}>\n              <Link strong onClick={() => window.open(character.url)}>{character.name}</Link>\n            </Paragraph>\n            <Text className='typography-block'>{character.role}</Text>\n          </Col>\n          {hasRightSection && (\n            <Col span={12} className='character-card-voice-actor-name-container'>\n              <Paragraph ellipsis={{rows: 2}}>\n                <Link strong onClick={() => window.open(character.voice_actors[0].url)}>{character.voice_actors[0].name}</Link>\n              </Paragraph>\n              <Text className='typography-block'>{character.voice_actors[0].language}</Text>\n            </Col>\n          )}\n        </Row>\n      </Col>\n      {hasRightSection && (\n        <Col span={4}>\n          <img src={getLargeVoiceActorImage()} alt='' className='character-card-image'/>\n        </Col>\n      )}\n    </Row>\n  );\n}\n\nexport default CharacterCard;","export default __webpack_public_path__ + \"static/media/apple-store-badge.6d21b830.png\";","export default __webpack_public_path__ + \"static/media/google-play-badge.d2b386b1.png\";","export default __webpack_public_path__ + \"static/media/register-illustration.91487de2.png\";","export default __webpack_public_path__ + \"static/media/no-result-illustration.a37200e1.png\";","export const linkGroups = [\n  [\n    {\n      text: 'About'\n    },\n    {\n      text: 'Press Room'\n    },\n    {\n      text: 'Support'\n    },\n    {\n      text: 'Advertising'\n    },\n    {\n      text: 'FAQ'\n    }\n  ],\n  [\n    {\n      text: 'Terms'\n    },\n    {\n      text: 'Privacy'\n    },\n    {\n      text: 'Cookie'\n    },\n    {\n      text: 'Notice at Collection'\n    },\n    {\n      text: 'Sitemap'\n    }\n  ]\n]","\nimport { Typography, Row, Col, Divider } from 'antd'\nimport { ImFacebook2, ImTwitter } from 'react-icons/im'\n\nimport { appleStoreBadge, googlePlayBadge } from 'assets/images'\nimport { linkGroups } from './const'\nimport './style.less'\n\nconst { Text, Link } = Typography\n\nconst Footer = () => {\n\n  return (\n    <div className='footer-wrapper'>\n      <div className='content-container py-4'>\n        <Row justify='space-between' className='row-vertical-sm'>\n          <Col>\n            <Row gutter={[{xs: 0, md: 40}, 16]} className='row-vertical-sm'>\n              <Col className='centered-flex-sm'>\n                <Text type='secondary' className='footer-logo'>MAL</Text>\n              </Col>\n              {linkGroups.map((linkGroup, i) => (\n                <Col key={i}>\n                  <Row gutter={[0,8]} className='row-vertical'>\n                    {linkGroup.map((link, i) => (\n                      <Col key={i} className='centered-flex-sm'>\n                        <Link type='secondary'>{link.text}</Link>\n                      </Col>\n                    ))}\n                  </Row>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Divider className='mobile my-4'/>\n          <Col>\n            <Row gutter={{xs: 0, md: 40}} className='row-vertical-sm'>\n              <Col className='centered-flex-sm'>\n                <div>\n                  <div className='mb-1'>\n                    <Text type='secondary' className='typography-fade mb-1'>Follow Us</Text>\n                  </div>\n                  <Row gutter={16}>\n                    <Col>\n                      <ImFacebook2 className='footer-social-media-icon'/> \n                    </Col>\n                    <Col>\n                      <ImTwitter className='footer-social-media-icon'/> \n                    </Col>\n                  </Row>\n                </div>\n              </Col>\n              <Divider className='mobile my-4'/>\n              <Col className='centered-flex-sm'>\n                <div>\n                  <div className='mb-1'>\n                    <Text type='secondary' className='typography-fade'>Get the App</Text>\n                  </div>\n                  <div className='mb-1'>\n                    <img src={appleStoreBadge} alt='' className='footer-app-download-badge'/>\n                  </div>\n                  <div>\n                    <img src={googlePlayBadge} alt='' className='footer-app-download-badge'/>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Divider className='my-4'/>\n        <div>\n          <Text type='secondary' className='typography-fade'>MyAnimeList.net is a property of MyAnimeList Co.,Ltd</Text>\n          <br></br>\n          <Text type='secondary' className='typography-fade'>©2021 All Rights Reserved.</Text>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer","import { useHistory } from 'react-router-dom'\nimport { Modal, ModalProps, Typography, Form, Input, Button, Row, Col, Divider } from 'antd';\n\nimport { validator } from 'helpers'\nimport './style.less';\n\nconst { Text, Title, Link } = Typography;\n\ninterface LoginModalProps extends ModalProps {\n}\n\nconst LoginModal = ({\n  ...props\n}: LoginModalProps) => {\n  const history = useHistory()\n\n  const [form] = Form.useForm()\n\n  return (\n    <Modal {...props}>\n      <div className='p-3 sm-px-0'>\n        <Row align='middle' gutter={24} className='mb-4'>\n          <Col>\n            <Title>LOGIN</Title>\n          </Col>\n          <Col flex='auto'>\n            <Divider />\n          </Col>\n        </Row>\n        <Form form={form} onFinish={values => alert(JSON.stringify(values))}>\n          <Form.Item\n            name=\"email\"\n            rules={[{validator: validator.email}]}\n            className='mb-2'\n          >\n            <Input size='large' placeholder='Email' />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{validator: validator.password}]}\n          >\n            <Input.Password size='large' placeholder='Password' />\n          </Form.Item>\n          <Row justify='end' className='mb-4'>\n            <Col>\n              <Link className='typography-small'>Forgot password?</Link>\n            </Col>\n            <Col>\n            </Col>\n          </Row>\n          <Row justify='end' className='mb-1'>\n            <Col>\n              <Form.Item shouldUpdate>\n                {() => (\n                  <Button\n                    size='large'\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    disabled={\n                      !form.isFieldsTouched(true) ||\n                      form.getFieldsError().filter(({ errors }) => errors.length)\n                        .length > 0\n                    }\n                  >\n                    LOGIN\n                  </Button>\n                )}\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row justify='end'>\n            <Col>\n              <Text className='typography-fade'>Not registered? </Text><Link onClick={() => history.push('/register')}>Create an account</Link>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    </Modal>\n  )\n}\n\nexport default LoginModal;","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Typography, Popover, Input, Button, Form, Drawer, Collapse } from 'antd';\nimport { FaSearch } from 'react-icons/fa';\nimport { FiMenu } from 'react-icons/fi';\nimport { BiLogInCircle } from 'react-icons/bi';\n\nimport { LoginModal } from 'components'\nimport { useScroll } from 'hooks'\nimport './style.less';\n\nconst { Title, Text, Link } = Typography\nconst { Panel } = Collapse\n\nconst links = [\n  {\n    text: 'ANIME',\n    subLinks: [\n      {\n        text: 'Anime Search',\n        link: 'https://myanimelist.net/anime.php'\n      },\n      {\n        text: 'Top Anime',\n        link: 'https://myanimelist.net/topanime.php'\n      },\n      {\n        text: 'Seasonal Anime',\n        link: 'https://myanimelist.net/anime/season'\n      }\n    ]\n  },\n  {\n    text: 'COMMUNITY',\n    subLinks: [\n      {\n        text: 'Forums',\n        link: 'https://myanimelist.net/forum'\n      },\n      {\n        text: 'Clubs',\n        link: 'https://myanimelist.net/clubs.php'\n      },\n      {\n        text: 'Blogs',\n        link: 'https://myanimelist.net/blog.php'\n      }\n    ]\n  },\n  {\n    text: 'INDUSTRY',\n    subLinks: [\n      {\n        text: 'News',\n        link: 'https://myanimelist.net/news'\n      },\n      {\n        text: 'Featured Articles',\n        link: 'https://myanimelist.net/featured'\n      },\n      {\n        text: 'People',\n        link: 'https://myanimelist.net/people.php'\n      }\n    ]\n  },\n  {\n    text: 'HELP',\n    subLinks: [\n      {\n        text: 'About',\n        link: 'https://myanimelist.net/about.php'\n      },\n      {\n        text: 'Support',\n        link: 'https://myanimelist.net/about.php?go=support'\n      }\n    ]\n  }\n]\n\nconst Navbar = () => {\n  const history = useHistory()\n  const [form] = Form.useForm()\n\n  const [search, setSearch] = useState('')\n  const [isLoginModalVisible, setIsLoginModalVisible] = useState(false)\n  const [isDrawerVisible, setIsDrawerVisible] = useState(false)\n\n  const { scrollY, scrollDirection } = useScroll();\n\n  const handleFinishSearch = (values: any) => {\n    if(values.search.length >= 3) {\n      history.push(`/animes?search=${values.search}&sort=title`)\n    }\n  }\n  return (\n    <>\n    <div className={`navbar-wrapper ${scrollY > 1 ? `bg-primary ${scrollDirection === 'down' ? 'hide' : ''}` : ''} py-2`}>\n      <div className='content-container'>\n        <Row align='middle' justify='space-between'>\n          <Col onClick={() => history.push('/')} className='clickable'>\n            <Title type='secondary' level={3} className='navbar-logo'>MyAnimeList</Title>\n          </Col>\n          <Col className='desktop'>\n            <Row gutter={16} align='middle'>\n              { links.map((link, i) => (\n                <Popover\n                  key={i}\n                  placement='bottomLeft'\n                  content={\n                    <div className='py-2'>\n                      {link.subLinks.map(subLink => (\n                        <div key={subLink.text} onClick={() => window.open(subLink.link, '_blank')} className='navbar-popover-option-container py-1 px-3'>\n                          <Text>{subLink.text}</Text>\n                        </div>\n                      ))}\n                    </div>\n                  }\n                >\n                  <Col>\n                    <Link type='secondary' strong>{link.text}</Link>\n                  </Col>\n                </Popover>\n              )) }\n              <Col>\n                <Form form={form} onFinish={handleFinishSearch}>\n                  <Form.Item\n                    name='search'\n                  >\n                    <Input\n                      value={search}\n                      onChange={e => setSearch(e.target.value)}\n                      suffix={<FaSearch className='navbar-search-icon'/>}\n                      className={`navbar-search ${search ? 'expanded' : ''}`}\n                    />\n                  </Form.Item>\n                </Form>\n              </Col>\n              <Col>\n                <Button\n                  type='default'\n                  icon={<BiLogInCircle className='mr-1'/>}\n                  onClick={() => setIsLoginModalVisible(true)}\n                >\n                  SIGN IN\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col onClick={() => setIsDrawerVisible(true)} className='mobile clickable'>\n            <Title type='secondary'><FiMenu/></Title>\n          </Col>\n        </Row>\n      </div>\n    </div>\n    <LoginModal visible={isLoginModalVisible} onCancel={() => setIsLoginModalVisible(false)}/>\n    <Drawer\n      placement=\"right\"\n      closable={false}\n      visible={isDrawerVisible}\n      onClose={() => setIsDrawerVisible(false)}\n    >\n      <div className='navbar-drawer-content-container'>\n        <Collapse ghost>\n          {links.map(link => (\n            <Panel header={link.text} key={link.text}>\n              {link.subLinks.map(subLink => (\n                <Link key={subLink.text} href={subLink.link} className='typography-block mb-2'>{subLink.text}</Link>\n              ))}\n            </Panel>\n          ))}\n        </Collapse>\n        <div>\n          <Button\n            type='default'\n            icon={<BiLogInCircle className='mr-1'/>}\n            onClick={() => setIsLoginModalVisible(true)}\n          >\n            SIGN IN\n          </Button>\n        </div>\n      </div>\n    </Drawer>\n  </>\n  );\n}\n\nexport default Navbar;","import { HTMLAttributes } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Row, Col, Typography, Avatar, Tag, Skeleton, Tooltip,  } from 'antd'\nimport { AiFillStar } from 'react-icons/ai'\nimport moment from 'moment'\n\nimport { Review } from 'interfaces/anime'\nimport {\n  selectAnime\n} from 'store/anime'\nimport { formatter, styler } from 'helpers'\nimport './style.less'\nimport { FaThumbsUp } from 'react-icons/fa'\n\nconst { Text, Link, Title, Paragraph } = Typography;\n\ninterface ReviewCardProps extends HTMLAttributes<HTMLDivElement> {\n  review?: Review\n  loading?: boolean\n}\n\nconst ReviewCard = ({\n  review,\n  loading\n}: ReviewCardProps) => {\n  const anime = useSelector(selectAnime)\n\n  if(!review) {\n    return (\n      <Row gutter={16} wrap={false} className='mb-4'>\n        <Col className='anime-review-card-reviewer-profile-container'>\n          <Skeleton.Avatar active={loading} className='skeleton-avatar-large'/>\n        </Col>\n        <Col flex='auto'>\n          <div className='anime-review-card-item-arrow'/>\n          <div className='anime-review-card-item-container p-2'>\n            <Row justify='space-between' wrap={false} className='mb-1'>\n              <Skeleton active={loading}/>\n            </Row>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n\n  return (\n    <Row gutter={16} wrap={false}>\n      <Col className='anime-review-card-reviewer-profile-container desktop'>\n        <Avatar src={review.reviewer.image_url} size='large' className='mb-1'/>\n        <Link className='anime-review-card-reviewer-name typography-block typography-small'>{review.reviewer.username}</Link>\n      </Col>\n      <Col flex='auto'>\n        <div className='anime-review-card-item-arrow desktop'/>\n        <div className='anime-review-card-item-container p-2'>\n        <Row gutter={8} wrap={false} justify='space-between' className='mobile'>\n          <Col>\n            <Row wrap={false} gutter={8} align='middle' className='mb-1'>\n              <Col>\n                <Avatar src={review.reviewer.image_url}/>\n              </Col>\n              <Col>\n                <Paragraph ellipsis={{rows: 2}}>\n                  <Link>{review.reviewer.username}</Link>\n                </Paragraph>\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Text className='color-success clickable'>\n              <FaThumbsUp/> {review.helpful_count}\n            </Text>\n          </Col>\n        </Row>\n          <Row justify='space-between' wrap={false} className='mb-1'>\n            <Col>\n              <Row gutter={8} wrap={false}>\n                <Col>\n                  <Tag color={styler.getScoreColor(review.reviewer.scores.overall)}>\n                    <Row gutter={4} wrap={false} align='middle'>\n                      <Col>\n                        <Title level={4} className='centered-flex'><AiFillStar/></Title>\n                      </Col>\n                      <Col>\n                        <Title level={4}>{review.reviewer.scores.overall}</Title>\n                      </Col>\n                    </Row>\n                  </Tag>\n                </Col>\n                <Col>\n                  <Text strong className='typography-fade typography-block'>{moment(review.date).format('MMM DD, YYYY')}</Text>\n                  <Text className='typography-fade typography-block typography-small'>{review.reviewer.episodes_seen} of {anime.data?.episodes} episodes seen</Text>\n                </Col>\n              </Row>\n            </Col>\n            <Col className='desktop'>\n              <Tooltip overlay={\n                <Text type='secondary'>{review.helpful_count} users found this helpful</Text>\n              }>\n                <Title level={5} className='color-success clickable'>\n                  <FaThumbsUp/> {review.helpful_count}\n                </Title>\n              </Tooltip>\n            </Col>\n          </Row>\n          <Paragraph style={{whiteSpace: 'pre-line'}} ellipsis={{rows: 4, expandable: true, symbol: 'More'}} >\n            {formatter.htmlDecode(review.content.replace(/\\\\n/g, \"\"))}\n          </Paragraph>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ReviewCard;","import { HTMLAttributes } from 'react';\nimport { Row, Col, Typography, Skeleton } from 'antd';\n\nimport { Staff } from 'interfaces/anime'\nimport './style.less';\n\nconst { Text, Link, Paragraph } = Typography;\n\ninterface StaffCardProps extends HTMLAttributes<HTMLDivElement> {\n  staff?: Staff\n  loading?: boolean\n}\n\nconst StaffCard = ({\n  staff,\n  loading,\n  ...props\n}: StaffCardProps) => {\n\n  if(!staff) return (\n    <Row {...props} className='staff-card'>\n      <Col span={4}>\n        <Skeleton.Button active={loading} className='skeleton-stretch'/>\n      </Col>\n      <Col span={20} className='staff-card-info-container p-2'>\n        <Skeleton active={loading} paragraph={{rows: 1}}/>\n      </Col>\n    </Row>\n  );\n\n  return (\n    <Row {...props} className='staff-card'>\n      <Col span={4}>\n        <img src={staff.image_url} alt='' className='staff-card-image'/>\n      </Col>\n      <Col span={20} className='staff-card-info-container p-2'>\n        <Paragraph ellipsis={{rows: 1}}>\n          <Link strong onClick={() => window.open(staff.url)}>{staff.name}</Link>\n        </Paragraph>\n        <Text className='typography-block'>{staff.positions.join(', ')}</Text>\n      </Col>\n    </Row>\n  );\n}\n\nexport default StaffCard;","import { HTMLAttributes } from 'react';\nimport { Row, Col, Typography, Skeleton } from 'antd';\nimport { FaComment } from 'react-icons/fa'\nimport moment from 'moment'\n\nimport './style.less';\nimport { Topic } from 'interfaces/anime';\n\nconst { Title, Link, Text } = Typography;\n\ninterface TopicCardProps extends HTMLAttributes<HTMLDivElement> {\n  topic?: Topic\n  loading?: boolean\n}\n\nconst TopicCard = ({\n  topic,\n  loading,\n  ...props\n}: TopicCardProps) => {\n\n  if(!topic) return (\n    <div {...props}>\n      <Row gutter={16} justify='space-between' className='topic-card p-2'>\n        <Skeleton active={loading} paragraph={{rows: 0}}/>\n      </Row>\n    </div>\n  )\n\n  const { title, url, author_name, author_url, date_posted, replies, last_post } = topic;\n\n  return (\n    <div {...props}>\n      <div className='topic-card p-2'>\n        <Row wrap={false} justify='space-between'>\n          <Col className='mr-2'>\n            <Title level={5} className='mb-1'><Link onClick={() => window.open(url, '_blank')}>{title}</Link></Title>\n            <Link onClick={() => window.open(author_url, '_blank')}>{author_name}</Link><Text> - {moment(date_posted).format('MMM DD, YYYY')}</Text>\n          </Col>\n          <Col className='desktop'>\n            <Row justify='end'>\n              <Col>\n                <Text className='typography-fade'><FaComment/> {replies}</Text>\n              </Col>\n            </Row>\n            <Text className='typography-fade'>{moment(last_post.date_posted).fromNow()}</Text>\n          </Col>\n        </Row>\n        <div className='mobile mt-1'>\n          <Row align='middle' justify='end'>\n            <Col>\n              <Text className='typography-fade'><FaComment/> {replies}</Text>\n              <Text className='typography-fade'>{moment(last_post.date_posted).fromNow()}</Text>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TopicCard;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Spin } from 'antd'\n\nimport {\n  CharacterCard\n} from 'components'\nimport {\n  selectCharactersAndStaff,\n  getCharactersAndStaff\n} from 'store/anime'\nimport {\n  Character\n} from 'interfaces/anime'\nimport './style.less'\nimport { useWindowSize } from 'hooks'\nimport { windowSizes } from 'consts'\n\nconst Characters = () => {\n  const dispatch = useDispatch()\n  const { width } = useWindowSize()\n\n  const charactersAndStaff = useSelector(selectCharactersAndStaff)\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n  const [filteredCharacters, setFilteredCharacters] = useState<Character[]>([])\n  const characters = charactersAndStaff.data?.characters\n\n  useEffect(() => {\n    dispatch(getCharactersAndStaff(\"1\"))\n  }, [dispatch])\n\n  useEffect(() => {\n    if(characters) {\n      setFilteredCharacters(\n        characters.map(character => ({\n          ...character,\n          voice_actors: character.voice_actors.filter(voiceActor => voiceActor.language === 'Japanese')\n        }))\n      )\n    }\n  }, [characters])\n\n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={totalShowedCharacters < filteredCharacters.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(totalShowedCharacters + 12 <= filteredCharacters.length ? totalShowedCharacters + 12 : filteredCharacters.length)\n        }, 500)}\n        threshold={50}\n      >\n        <Row gutter={32}>\n          {charactersAndStaff.data && charactersAndStaff.data.characters.length > 0 && !charactersAndStaff.loading\n          ? filteredCharacters.slice(0, totalShowedCharacters).map(character => (\n            <Col key={character.mal_id} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <CharacterCard character={character}/>\n            </Col>\n          ))\n          : Array.from(Array(4).keys()).map(i => (\n            <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <CharacterCard loading={charactersAndStaff.loading}/>\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default Characters;","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Spin } from 'antd'\n\nimport {\n  TopicCard\n} from 'components'\nimport {\n  selectTopics\n} from 'store/anime'\nimport './style.less'\nimport { checker } from 'helpers'\n\nconst Forums = () => {\n\n  const topics = useSelector(selectTopics)\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n\n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={totalShowedCharacters < topics.data.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(totalShowedCharacters + 12 <= topics.data.length ? totalShowedCharacters + 12 : topics.data.length)\n        }, 500)}\n        threshold={50}\n      >\n        {checker.isFetched(topics)\n        ? topics.data.slice(0, totalShowedCharacters).map(topic => (\n            <TopicCard key={topic.topic_id} topic={topic} className='mb-4 sm-mb-2'/>\n        ))\n        : Array.from(Array(3).keys()).map((i) => (\n            <TopicCard loading={topics.loading} className='mb-4 sm-mb-2'/>\n        ))}\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default Forums;","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Spin } from 'antd'\n\nimport {\n  ArticleCard\n} from 'components'\nimport {\n  selectArticles\n} from 'store/anime'\nimport './style.less'\nimport { checker } from 'helpers'\nimport { windowSizes } from 'consts'\nimport { useWindowSize } from 'hooks'\n\nconst News = () => {\n  const articles = useSelector(selectArticles)\n  const { width } = useWindowSize()\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n\n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={totalShowedCharacters < articles.data.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(totalShowedCharacters + 12 <= articles.data.length ? totalShowedCharacters + 12 : articles.data.length)\n        }, 500)}\n        threshold={50}\n      >\n        <Row gutter={32}>\n          {checker.isFetched(articles)\n          ? articles.data.slice(0, 4).map(article => (\n            <Col key={article.url} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <ArticleCard article={article} />\n            </Col>\n          ))\n          : Array.from(Array(4).keys()).map((i) => (\n            <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <ArticleCard loading={articles.loading}/>\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default News;","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Row, Col, Typography, Divider } from 'antd'\n\nimport {\n  CharacterCard,\n  StaffCard,\n  ReviewCard,\n  ArticleCard,\n  TopicCard,\n  AnimeCard\n} from 'components'\nimport {\n  selectArticles,\n  selectCharactersAndStaff,\n  selectRecommendations,\n  selectReviews,\n  selectTopics\n} from 'store/anime'\nimport {\n  Character\n} from 'interfaces/anime'\nimport { checker } from 'helpers'\nimport './style.less'\nimport { useWindowSize } from 'hooks'\nimport { windowSizes } from 'consts'\n\nconst { Title, Link } = Typography\n\nconst Overview = () => {\n  const history = useHistory()\n  const { width } = useWindowSize()\n\n  const charactersAndStaff = useSelector(selectCharactersAndStaff)\n  const characters = charactersAndStaff.data?.characters\n  const staffList = charactersAndStaff.data?.staffList\n  const reviews = useSelector(selectReviews)\n  const articles = useSelector(selectArticles)\n  const topics = useSelector(selectTopics)\n  const recommendations = useSelector(selectRecommendations)\n\n  const [filteredCharacters, setFilteredCharacters] = useState<Character[]>([])\n\n  useEffect(() => {\n    if(characters) {\n      setFilteredCharacters(\n        characters.map(character => ({\n          ...character,\n          voice_actors: character.voice_actors.filter(voiceActor => voiceActor.language === 'Japanese')\n        }))\n      )\n    }\n  }, [characters])\n\n  const renderTitle = (type: string) => (\n    <Row gutter={32} align='middle' className='mb-3'>\n      <Col>\n        <Title level={3}>{type.toUpperCase()}</Title>\n      </Col>\n      <Col flex='auto'>\n        <Divider/>\n      </Col>\n      <Col>\n        <Link onClick={() => history.push(`/anime/1/${type}`)} strong>VIEW MORE</Link>\n      </Col>\n    </Row>\n  )\n\n  return (\n    <div>\n      {renderTitle('characters')}\n      <Row gutter={32} className='mb-5'>\n        {charactersAndStaff.data && charactersAndStaff.data.characters.length > 0 && !charactersAndStaff.loading\n        ? filteredCharacters.slice(0, 4).map(character => (\n          <Col key={character.mal_id} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <CharacterCard character={character}/>\n          </Col>\n        ))\n        : Array.from(Array(4).keys()).map((i) => (\n          <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <CharacterCard loading={charactersAndStaff.loading}/>\n          </Col>\n        ))}\n      </Row>\n      {renderTitle('staff')}\n      <Row gutter={32} className='mb-5'>\n        {charactersAndStaff.data && charactersAndStaff.data.characters.length > 0 && !charactersAndStaff.loading\n        ? staffList?.slice(0, 4).map(staff => (\n          <Col key={staff.mal_id} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <StaffCard staff={staff}/>\n          </Col>\n        ))\n        : Array.from(Array(4).keys()).map(i => (\n          <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <StaffCard loading={charactersAndStaff.loading}/>\n          </Col>\n        ))}\n      </Row>\n      {renderTitle('reviews')}\n      <div className='mb-5'>\n        {checker.isFetched(reviews)\n        ? reviews.data.slice(0, 2).map(review => (\n          <div key={review.mal_id} className='mb-4 sm-mb-2'>\n            <ReviewCard review={review}/>\n          </div>\n        ))\n        : Array.from(Array(2).keys()).map(i => (\n          <div key={i} className='mb-4 sm-mb-2'>\n            <ReviewCard loading={reviews.loading}/>\n          </div>\n        ))}\n      </div>\n      {renderTitle('news')}\n      <Row gutter={32} className='mb-5'>\n        {checker.isFetched(articles)\n        ? articles.data.slice(0, 4).map(article => (\n          <Col key={article.url} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <ArticleCard article={article} />\n          </Col>\n        ))\n        : Array.from(Array(4).keys()).map(i => (\n          <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <ArticleCard loading={articles.loading}/>\n          </Col>\n        ))}\n      </Row>\n      {renderTitle('forums')}\n      <div className='mb-5'>\n        {checker.isFetched(topics)\n        ? topics.data.slice(0, 3).map(topic => (\n            <TopicCard key={topic.topic_id} topic={topic} className='mb-4 sm-mb-2'/>\n        ))\n        : Array.from(Array(3).keys()).map(i => (\n            <TopicCard key={i} loading={topics.loading} className='mb-4 sm-mb-2'/>\n        ))}\n      </div>\n      {renderTitle('recommendations')}\n      <Row gutter={{xs: 8, sm: 8, md: 32}} className='mb-5'>\n        {checker.isFetched(recommendations)\n        ? recommendations.data.slice(0, 6).map(recommendation => (\n          <Col key={recommendation.mal_id} span={width <= windowSizes.sm.max ? 8 : width <= windowSizes.md.max ? 6 : 4} className='mb-2'>\n            <AnimeCard recommendation={recommendation} />\n          </Col>\n        ))\n        : Array.from(Array(6).keys()).map(i => (\n          <Col key={i} span={width <= windowSizes.sm.max ? 8 : width <= windowSizes.md.max ? 6 : 4} className='mb-2'>\n            <AnimeCard loading={recommendations.loading} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  ) \n}\n\nexport default Overview;","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Spin } from 'antd'\n\nimport {\n  AnimeCard\n} from 'components'\nimport {\n  selectRecommendations\n} from 'store/anime'\nimport './style.less'\nimport { useWindowSize } from 'hooks'\nimport { checker } from 'helpers'\nimport { windowSizes } from 'consts'\n\nconst Recommendations = () => {\n  const { width } = useWindowSize()\n\n  const recommendations = useSelector(selectRecommendations)\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n\n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={totalShowedCharacters < recommendations.data.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(totalShowedCharacters + 12 <= recommendations.data.length ? totalShowedCharacters + 12 : recommendations.data.length)\n        }, 500)}\n        threshold={50}\n      >\n        <Row gutter={{xs: 8, sm: 8, md: 32}} className='mb-5'>\n          {checker.isFetched(recommendations)\n          ? recommendations.data.slice(0, totalShowedCharacters).map(recommendation => (\n            <Col key={recommendation.mal_id} span={width <= windowSizes.sm.max ? 8 : width <= windowSizes.md.max ? 6 : 4} className='mb-2'>\n              <AnimeCard recommendation={recommendation} />\n            </Col>\n          ))\n          : Array.from(Array(6).keys()).map(i => (\n            <Col key={i} span={width <= windowSizes.sm.max ? 8 : width <= windowSizes.md.max ? 6 : 4} className='mb-2'>\n              <AnimeCard loading={recommendations.loading} />\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default Recommendations;","import { useSelector } from 'react-redux'\n\nimport {\n  selectReviews\n} from 'store/anime'\nimport {\n  ReviewCard\n} from 'components'\nimport {\n  checker\n} from 'helpers'\nimport './style.less'\n\nconst Reviews = () => {\n  const reviews = useSelector(selectReviews)\n\n  return (\n    <div>\n      {checker.isFetched(reviews)\n        ? reviews.data.slice(0, 2).map(review => (\n          <div key={review.mal_id} className='mb-4 sm-mb-2'>\n            <ReviewCard review={review}/>\n          </div>\n        ))\n        : Array.from(Array(2).keys()).map(i => (\n          <div key={i} className='mb-4 sm-mb-2'>\n            <ReviewCard loading={reviews.loading}/>\n          </div>\n        ))}\n    </div>\n  ) \n}\n\nexport default Reviews;","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Spin } from 'antd'\n\nimport {\n  StaffCard\n} from 'components'\nimport {\n  selectCharactersAndStaff\n} from 'store/anime'\nimport './style.less'\nimport { windowSizes } from 'consts'\nimport { useWindowSize } from 'hooks'\n\nconst Staff = () => {\n  const { width } = useWindowSize()\n\n  const charactersAndStaff = useSelector(selectCharactersAndStaff)\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n\n  const staffList = charactersAndStaff.data?.staffList\n  \n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={staffList && totalShowedCharacters < staffList.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(staffList ? totalShowedCharacters + 12 <= staffList.length ? totalShowedCharacters + 12 : staffList.length : 0)\n        }, 500)}\n        threshold={50}\n      >\n        <Row gutter={32}>\n          {charactersAndStaff.data && charactersAndStaff.data.characters.length > 0 && !charactersAndStaff.loading\n          ? staffList?.slice(0, totalShowedCharacters).map(staff => (\n            <Col key={staff.mal_id} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <StaffCard staff={staff}/>\n            </Col>\n          ))\n          : Array.from(Array(4).keys()).map(i => (\n            <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <StaffCard loading={charactersAndStaff.loading}/>\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default Staff;","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Switch, Route, useHistory, useParams } from 'react-router-dom'\nimport { Row, Col, Typography, Button, Table, Menu, Skeleton } from 'antd'\nimport { AiOutlinePlus, AiOutlineHeart } from 'react-icons/ai'\nimport { FaUser, FaUserCheck, FaTrophy, FaHeart, FaStar } from 'react-icons/fa'\n\nimport {\n  selectAnime,\n  getAnime,\n  getCharactersAndStaff,\n  getReviews,\n  getArticles,\n  getTopics,\n  getRecommendations\n} from 'store/anime'\nimport {\n  Reference\n} from 'interfaces/anime'\nimport {\n  Overview,\n  Characters,\n  Staff,\n  Reviews,\n  News,\n  Forums,\n  Recommendations\n} from './views'\nimport './style.less'\n\nconst { Title, Text, Paragraph, Link } = Typography\n\nconst infoColumnKeys = [\n  'type',\n  'episodes',\n  'status',\n  'aired',\n  'premiered',\n  'broadcast',\n  'producers',\n  'licensors',\n  'studios',\n  'source',\n  'genres',\n  'duration',\n  'rating'\n]\n\nconst Anime = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const {id, menu} = useParams<{id: string, menu: string}>()\n\n  const anime = useSelector(selectAnime)\n\n  const infoColumns = infoColumnKeys.map(key => (\n    {\n      title: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n      dataIndex: key,\n      key: key,\n    }\n  ));\n\n  useEffect(() => {\n    dispatch(getAnime(id))\n    dispatch(getCharactersAndStaff(id))\n    dispatch(getReviews(id))\n    dispatch(getArticles(id))\n    dispatch(getTopics(id))\n    dispatch(getRecommendations(id))\n  }, [dispatch, id])\n\n  const generateReferenceText = (references: Reference[]) => (<>\n    {references.map((reference, i) => (\n      <span key={reference.mal_id}>\n        <Link onClick={() => window.open(reference.url, '_blank')}>\n          {reference.name}\n        </Link>\n        {i < references.length - 1 && ', '}\n      </span>\n    ))}\n  </>)\n\n  // convert anime object to table dataSource format\n  const getAnimeInfoDataSource = () => {\n    if(!anime?.data) return {id: ''}\n    const { aired, producers, licensors, studios, genres } = anime.data\n    return {\n      ...anime.data,\n      id: anime.data.mal_id,\n      aired: aired.string,\n      producers: generateReferenceText(producers),\n      licensors: generateReferenceText(licensors),\n      studios: generateReferenceText(studios),\n      genres: generateReferenceText(genres)\n    }\n  }\n\n  const renderAnimeTitle = () => (\n    anime.loading ? (\n      <>\n        <Skeleton.Button active className='anime-title-skeleton mb-1'/>\n        <Skeleton.Button active className='anime-subtitle-skeleton'/>\n      </>\n    ) : (\n      <>\n        <Title type='secondary' ellipsis={{rows: 1, tooltip: true}} className='mb-1'>\n          {anime.data?.title}\n        </Title>\n        <Paragraph type='secondary' ellipsis={{rows: 1, tooltip: true}} className='typography-h4'>\n          {anime.data?.title_english}\n        </Paragraph>\n      </>\n    )\n  )\n\n  const renderActionButtons = () => (\n    <Row wrap={false} gutter={{xs: 8, md: 16}}>\n      <Col>\n        <Button ghost shape='circle' className='button-ghost-warning'>\n          <AiOutlinePlus/>\n        </Button>\n      </Col>\n      <Col>\n        <Button ghost shape='circle' className='button-ghost-error'>\n          <AiOutlineHeart/>\n        </Button>\n      </Col>\n    </Row>\n  )\n\n  return (\n    <div>\n      <div className='anime-banner-image-container'>\n        <div className='anime-banner-image-text-container content-container py-4'>\n          <Row gutter={16} wrap={false} className='mt-4 mobile'>\n            <Col>\n              {anime.loading\n              ? <Skeleton.Button active className='anime-banner-info-image-skeleton'/>\n              : <img src={anime.data?.image_url} alt='' className='anime-banner-info-image'/>\n              }\n            </Col>\n            <Col>\n              <Row justify='space-between' className='row-vertical anime-banner-info-image-detail-container'>\n                <Col>\n                  {renderAnimeTitle()}\n                </Col>\n                <Col>\n                  {renderActionButtons()}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row wrap={false} className='desktop'>\n            <Col flex='282px'/>\n            <Col flex='auto'>\n              <Row gutter={32} wrap={false} align='bottom' justify='space-between'>\n                <Col>\n                  {renderAnimeTitle()}\n                </Col>\n                <Col>\n                  {renderActionButtons()}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n        <img src={anime.data?.image_url} alt='' className='anime-banner-image'/>\n      </div>\n      <div className='anime-banner-info-container py-4'>\n        <div className='content-container'>\n          <Row wrap={false} className='mb-5'>\n            <Col flex='282px' className='desktop'>\n              {anime.loading\n              ? <Skeleton.Button active className='anime-banner-info-image-skeleton'/>\n              : <img src={anime.data?.image_url} alt='' className='anime-banner-info-image'/>\n              }\n            </Col>\n            <Col flex='auto'>\n              <Row justify='space-between' className='mb-2'>\n                <Col>\n                  <Title level={4} className='desktop'>Synopsis</Title>\n                  <div className='anime-banner-info-score-container mobile p-1'>\n                    <Title><FaStar/> {anime.data?.score}</Title>\n                  </div>\n                </Col>\n                {!anime.loading && (\n                  <Col>\n                    <Row gutter={16}>\n                      <Col>\n                        <Text strong><FaTrophy className='color-warning'/> #{anime.data?.rank}</Text>\n                      </Col>\n                      <Col>\n                        <Text strong><FaHeart className='color-error'/> #{anime.data?.popularity}</Text>\n                      </Col>\n                      <Col>\n                        <Text strong><FaUser className='color-success'/> {anime.data?.members.toLocaleString()}</Text>\n                      </Col>\n                    </Row>\n                  </Col>\n                )}\n              </Row>\n              <Title level={4} className='mobile mb-1'>Synopsis</Title>\n              {anime.loading\n              ? <Skeleton active paragraph={{rows: 1}}  className='anime-banner-info-synopsis'/>\n              : <Paragraph ellipsis={{rows: 4, expandable: true, symbol: 'More'}} className='anime-banner-info-synopsis'>\n                  {anime.data?.synopsis}\n                </Paragraph>\n              }\n            </Col>\n          </Row>\n          <Row gutter={24} wrap={false}>\n            <Col className='desktop'>\n              <div className='anime-banner-info-score-container centered-flex py-1 px-2'>\n                <Row align='middle' className='row-vertical'>\n                  <Col >\n                    <Text strong>SCORE</Text>\n                  </Col>\n                  <Col>\n                    <Text strong className='anime-banner-info-score'>{anime.data?.score}</Text>\n                  </Col>\n                  <Col >\n                    <Text>{anime.data?.scored_by.toLocaleString()} <FaUserCheck/></Text>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col flex='auto'>\n              <Table loading={anime.loading} rowKey='id' dataSource={[getAnimeInfoDataSource()]} columns={infoColumns} pagination={false} className='anime-banner-info-table overflow-scroll' />\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <div className='centered-flex pt-4 pb-5'>\n        <div className='content-container'>\n          <Menu mode='horizontal' selectedKeys={[menu || 'overview']} className='anime-menu mb-5' >\n            <Menu.Item key='overview' onClick={() => history.push(`/anime/${id}`)}>OVERVIEW</Menu.Item>\n            <Menu.Item key='characters' onClick={() => history.push(`/anime/${id}/characters`)}>CHARACTERS</Menu.Item>\n            <Menu.Item key='staff' onClick={() => history.push(`/anime/${id}/staff`)}>STAFF</Menu.Item>\n            <Menu.Item key='reviews' onClick={() => history.push(`/anime/${id}/reviews`)}>REVIEWS</Menu.Item>\n            <Menu.Item key='news' onClick={() => history.push(`/anime/${id}/news`)}>NEWS</Menu.Item>\n            <Menu.Item key='forums' onClick={() => history.push(`/anime/${id}/forums`)}>FORUMS</Menu.Item>\n            <Menu.Item key='recommendations' onClick={() => history.push(`/anime/${id}/recommendations`)}>RECOMMENDATIONS</Menu.Item>\n          </Menu>\n          <Switch>\n            <Route exact path='/anime/:id'>\n              <Overview/>\n            </Route>\n            <Route exact path='/anime/:id/characters'>\n              <Characters/>\n            </Route>\n            <Route exact path='/anime/:id/staff'>\n              <Staff/>\n            </Route>\n            <Route exact path='/anime/:id/reviews'>\n              <Reviews/>\n            </Route>\n            <Route exact path='/anime/:id/news'>\n              <News/>\n            </Route>\n            <Route exact path='/anime/:id/forums'>\n              <Forums/>\n            </Route>\n            <Route exact path='/anime/:id/recommendations'>\n              <Recommendations/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  ) \n}\n\nexport default Anime;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router';\nimport { Row, Col, Form, Input,  Typography, Pagination, Button, Select, Slider, DatePicker } from 'antd';\nimport { FaSearch, FaSortAmountDown, FaSortAmountUp } from 'react-icons/fa';\nimport moment from 'moment'\n\nimport {\n  AnimeCard\n} from 'components';\nimport './style.less';\nimport {\n  selectAnimes,\n  getAnimes\n} from 'store/anime'\nimport { useWindowSize } from 'hooks';\nimport { options, windowSizes } from 'consts';\nimport { checker, formatter } from 'helpers';\nimport { noResultIllustration } from 'assets/images';\n\nconst { Title, Text } = Typography\nconst { Option } = Select\n\nconst Home = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { width } = useWindowSize()\n  const [form] = Form.useForm()\n\n  const animes = useSelector(selectAnimes)\n  const [page, setPage] = useState(0)\n\n  //convert query to jikan api query format\n  const getApiQuery = () => {\n    const params = new URLSearchParams(history.location.search)\n    let queryObj: any = {}\n    if(params.get('search')) queryObj.q = params.get('search')\n    queryObj.order_by = params.get('sort') || 'score' // default value\n    if(params.get('page')) queryObj.page = params.get('page')\n    if(params.get('genre')) queryObj.genre = params.get('genre')\n    if(params.get('format')) queryObj.type = params.get('format')\n    if(params.get('score')) queryObj.score = params.get('score')\n    if(params.get('year')) {\n      queryObj.start_date = `${params.get('year')}-01-01`\n      queryObj.end_date = `${params.get('year')}-12-31`\n    }\n    queryObj.sort = params.get('order') || 'asc'\n    // default value\n    queryObj.limit = 20\n    // handle sort score order\n    if(queryObj.order_by === 'score') {\n      if(queryObj.sort === 'desc') queryObj.sort = 'asc'\n      else queryObj.sort = 'desc'\n    } \n    return formatter.objectToQuery(queryObj)\n  }\n\n  const setFormValuesByParams = () => {\n    const params = new URLSearchParams(history.location.search)\n    // set form fields initial value from url search params\n    form.setFieldsValue({\n      search: params.get('search') || '', //@ts-ignore\n      genre: params.get('genre')?.split(',').map(genreValue => options.revGenres[genreValue]) || [], //@ts-ignore\n      type: params.get('format')?.split(',').map(formatValue => options.revFormats[formatValue]) || [],\n      score: params.get('score'), //@ts-ignore\n      sort: options.revSorts[params.get('sort') || 'score'],\n      order: params.get('order') === 'desc' ? params.get('order') : 'asc'\n    })\n    if(params.get('page')) setPage(Number(params.get('page')))\n  }\n\n  useEffect(() => { \n    setFormValuesByParams()\n    dispatch(getAnimes(getApiQuery()))\n    return history.listen(() => {\n      dispatch(getAnimes(getApiQuery()))\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history, dispatch, form])\n\n\n  const handleChangePagination = (page: number) => {\n    setPage(page)\n    submitForm(page)\n  }\n\n  const submitForm = (newPage?: number) => {\n    let values = form.getFieldsValue()\n    values.page = newPage || 1\n\n    if(values.genre) { //@ts-ignore convert genre from label to value\n      values.genre = values.genre.map((genreLabel) => options.genres[genreLabel]) \n    }\n\n    if(values.format) { //@ts-ignore convert format from label to value\n      values.format = values.format.map((formatLabel) => options.formats[formatLabel]) \n    }\n\n    if(values.sort) { //@ts-ignore convert sort from label to value\n      values.sort = options.sorts[values.sort]\n    }\n\n    // clear values with default value\n    if(values.page === 1) delete values.page\n    if(values.score === 0) delete values.score\n    if(values.year) {\n      values.year = moment(values.year).format('yyyy')\n    }\n    if(values.sort === 'score') delete values.sort\n    if(values.order === 'asc') delete values.order\n\n    history.push(`/animes?${formatter.objectToQuery(values)}`)\n  }\n\n  const handleValuesChangeForm = (changedValues: any) => {\n    if(!changedValues.search && changedValues.search !== '') { // prevent search change to submit form\n      submitForm()\n    }\n  }\n\n  const handleResetSearch = () => {\n    history.push('/animes')\n    form.resetFields()\n    form.setFieldsValue({\n      sort: options.revSorts.score\n    })\n  }\n\n  const handleClickOrder = () => {\n    if(form.getFieldValue('order') === 'asc') {\n      form.setFieldsValue({\n        order: 'desc'\n      })\n    } else {\n      form.setFieldsValue({\n        order: 'asc'\n      })\n    }\n    form.submit()\n  }\n\n  const handleSubmitSearch = () => {\n    if(form.getFieldValue('search').length >= 3) {\n      form.setFieldsValue({\n        sort: options.revSorts.title\n      })\n      form.submit()\n    }\n  }\n\n  return (\n    <div>\n      <div className='navbar-background'/>\n      <div className='centered-flex'>\n        <div className='content-container py-5'>\n          <Form form={form} onValuesChange={handleValuesChangeForm} onFinish={() => submitForm()} className='mb-4'>\n            <Row gutter={40} className='mb-1' justify='space-between'>\n              <Col xs={12} md={5}>\n                <Title level={5} className='mb-1'>Search</Title>\n                <Form.Item\n                  name='search'\n                  className='mb-2'\n                >\n                  <Input onKeyDown={e => e.key === 'Enter' && handleSubmitSearch()} suffix={<FaSearch onClick={handleSubmitSearch} className='clickable'/>} />\n                </Form.Item>\n              </Col>\n              <Col>\n                <Title level={5} className='mb-1'>Sort By</Title>\n                <Row align='middle' gutter={16}>\n                  <Col>\n                    <Form.Item\n                      name='sort'\n                    >\n                      <Select>\n                        {Object.entries(options.sorts).map((sort, i) => (\n                          <Option key={i} value={sort[0]}>{sort[0]}</Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col onClick={handleClickOrder} className='clickable'>\n                    <Form.Item\n                      name='order'\n                      className='hidden'\n                    >\n                      <Input />\n                    </Form.Item>\n                    {form.getFieldValue('order') === 'asc'\n                    ? <FaSortAmountUp/>\n                    : <FaSortAmountDown/>\n                    }\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row gutter={40}>\n              <Col xs={24} md={5} className='animes-filter-container overflow-scroll sm-mb-5'>\n                  <div className='sm-mr-2'>\n                    <Title level={5} className='mb-1'>Genres</Title>\n                    <Form.Item\n                      name='genre'\n                      className='mb-2'\n                    >\n                      <Select\n                        allowClear\n                        mode='multiple'\n                      >\n                        {Object.entries(options.genres).map((genre, i) => (\n                          <Option key={i} value={genre[0]}>{genre[0]}</Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </div>\n                  <div className='sm-mr-2'>\n                    <Title level={5} className='mb-1'>Format</Title>\n                    <Form.Item\n                      name='format'\n                      className='mb-2'\n                    >\n                      <Select\n                        allowClear\n                        mode='multiple'\n                      >\n                        {Object.entries(options.formats).map((format, i) => (\n                          <Option key={i} value={format[0]}>{format[0]}</Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </div>\n                  <div className='sm-mr-2'>\n                    <Title level={5} className='mb-1'>Score</Title>\n                    <Form.Item\n                      name='score'\n                      className='mb-2'\n                    >\n                      <Slider className='slider-reverse' min={0} max={10}/>\n                    </Form.Item>\n                  </div>\n                  <div className='sm-mr-2'>\n                    <Title level={5} className='mb-1'>Year</Title>\n                    <Form.Item\n                      name='year'\n                    >\n                      <DatePicker picker=\"year\" placeholder='' disabledDate={current => current < moment('01-01-1940') || current > moment()} />\n                    </Form.Item>\n                  </div>\n              </Col>\n              <Col flex='auto'>\n                <Row gutter={24} className='mb-2'>\n                  {checker.isFetched(animes)\n                  ? animes.data.map(anime => (\n                    <Col style={{width: width > windowSizes.md.max ? '20%' : width > windowSizes.sm.max ? '25%' : '50%'}} className='mb-3'>\n                      <AnimeCard anime={anime} />\n                    </Col>\n                  ))\n                  : animes.loading\n                  ? Array.from(Array(15).keys()).map((i) => (\n                    <Col style={{width: width > windowSizes.md.max ? '20%' : width > windowSizes.sm.max ? '25%' : '50%'}} className='mb-5'>\n                      <AnimeCard loading={animes.loading} />\n                    </Col>\n                  ))\n                  : <div className='no-result-illustration-container'>\n                      <Text className='typography-fade mb-2'>No result found...</Text>\n                      <img src={noResultIllustration} alt='' className='mb-2'/>\n                      <Button onClick={handleResetSearch} type='primary'>Reset Search</Button>\n                  </div>\n                }\n                </Row>\n                {animes.data.length > 0 && (\n                  <Row justify='end' className='mb-5'>\n                    <Col>\n                      <Pagination\n                        current={page || 1}\n                        pageSize={animes.pagination.pageSize}\n                        disabled={animes.loading}\n                        showSizeChanger={false}\n                        total={animes.pagination.total}\n                        onChange={handleChangePagination}\n                      />\n                    </Col>\n                  </Row>\n                )}\n              </Col>\n            </Row>\n          </Form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router';\n\nimport {\n  BannerCarousel,\n  Carousel,\n  AnimeCard,\n  ArticleCard\n} from 'components';\nimport './style.less';\nimport {\n  selectFeaturedNewsList,\n  getFeaturedNewsList\n} from 'store/news'\nimport {\n  selectCurrentSeason,\n  selectTopAiringAnimes,\n  getCurrentSeason,\n  getTopAiringAnimes\n} from 'store/anime'\nimport { Col, Divider, notification, Row, Skeleton, Typography } from 'antd';\nimport { useWindowSize } from 'hooks';\nimport { windowSizes } from 'consts';\nimport { checker } from 'helpers';\n\nconst { Title, Link } = Typography\n\nconst Home = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { width } = useWindowSize()\n\n  const featuredNewsList = useSelector(selectFeaturedNewsList)\n  const currentSeason = useSelector(selectCurrentSeason)\n  const topAiringAnimes = useSelector(selectTopAiringAnimes)\n\n  const [carouselCardColumn, setCarouselCardColumn] = useState(6)\n\n  useEffect(() => {\n    dispatch(getFeaturedNewsList())\n    dispatch(getCurrentSeason())\n    dispatch(getTopAiringAnimes())\n  }, [dispatch])\n\n  // show notification if news fetch error\n  useEffect(() => {\n    if(featuredNewsList.error) {\n      notification.error({\n        message: 'Failed to fetch news. Please try again.'\n      })\n    }\n  }, [featuredNewsList.error])\n\n  useEffect(() => {\n    if(width <= windowSizes.lg.max) {\n      setCarouselCardColumn(4);\n      return\n    }\n    setCarouselCardColumn(6);\n  }, [width])\n\n  return (\n    <div>\n      <BannerCarousel\n        loading={featuredNewsList.loading}\n        newsList={featuredNewsList.data || []}\n      />\n      <div className='centered-flex'>\n        <div className='content-container py-5'>\n          <div className='mb-5'>\n            <Row gutter={{xs: 0, md: 32}} align='middle' className='mb-3'>\n              <Col>\n                <Title level={3}>{currentSeason.data?.season_name} {currentSeason.data?.season_year} Anime</Title>\n              </Col>\n              <Col flex='auto' className='desktop'>\n                <Divider/>\n              </Col>\n              <Col className='desktop'>\n                <Link onClick={() => history.push('/animes')} strong>VIEW MORE</Link>\n              </Col>\n            </Row>\n            {width <= windowSizes.md.max ? (\n              <div className='anime-cards-section-swiper'>\n                {currentSeason.loading\n                ? Array.from(Array(6).keys()).map(i => \n                    <div key={i} className='anime-cards-section-swiper-card-container mr-2'>\n                      <Skeleton.Button key={i} active className='skeleton-anime-card'/>\n                    </div>\n                  )\n                : currentSeason.data?.anime.map((anime, i) => \n                    <div key={i} className='anime-cards-section-swiper-card-container mr-2'>\n                      <AnimeCard\n                        onClick={() => history.push(`/anime/${anime.mal_id}`)}\n                        seasonAnime={anime}\n                      />\n                    </div>\n                  )}\n              </div>\n            ) : (\n              <Carousel\n                dots={false}\n                showArrows={!currentSeason.loading}\n                className='anime-cards-section-carousel mb-1'\n              >\n                { Array.from(Array(Math.ceil((currentSeason.loading ? 6 : currentSeason.data?.anime.length || 0) / 6)).keys()).map(i => (\n                  <div key={i}>\n                    <Row gutter={carouselCardColumn * 6} className='anime-cards-section-slide'>\n                      { Array.from(Array(carouselCardColumn).keys()).map(j => (\n                        <Col key={`${i}${j}`} span={24 / carouselCardColumn}>\n                          {currentSeason.loading\n                          ? <Skeleton.Button active key={i} className='skeleton-anime-card'/>\n                          : currentSeason.data?.anime[i * carouselCardColumn + j]\n                          && <AnimeCard\n                              onClick={() => history.push(`/anime/${currentSeason.data?.anime[i * carouselCardColumn + j].mal_id}`)}\n                              seasonAnime={currentSeason.data?.anime[i * carouselCardColumn + j]}\n                            />}\n                        </Col>\n                      )) }\n                    </Row>\n                  </div>\n                )) }\n              </Carousel>\n            )}\n            <Row justify='end' className='mobile mt-2'>\n              <Col>\n                <Link onClick={() => history.push('/animes')} strong>VIEW MORE</Link>\n              </Col>\n            </Row>\n          </div>\n          <div className='mb-5'>\n            <Row gutter={{xs: 0, md: 32}} align='middle' className='mb-3'>\n              <Col>\n                <Title level={3}>Top Airing Anime</Title>\n              </Col>\n              <Col flex='auto' className='desktop'>\n                <Divider/>\n              </Col>\n              <Col className='desktop'>\n                <Link onClick={() => history.push('/animes')} strong>VIEW MORE</Link>\n              </Col>\n            </Row>\n            {width <= windowSizes.md.max ? (\n              <div className='anime-cards-section-swiper'>\n                {topAiringAnimes.loading\n                ? Array.from(Array(6).keys()).map(i => \n                    <div key={i} className='anime-cards-section-swiper-card-container mr-2'>\n                      <Skeleton.Button key={i} active className='skeleton-anime-card'/>\n                    </div>\n                  )\n                : topAiringAnimes.data?.map((anime, i) => \n                    <div key={i} className='anime-cards-section-swiper-card-container mr-2'>\n                      <AnimeCard\n                        onClick={() => history.push(`/anime/${anime.mal_id}`)}\n                        topAiringAnime={anime}\n                      />\n                    </div>\n                  )}\n              </div>\n            ) : (\n              <Carousel\n                dots={false}\n                showArrows={!topAiringAnimes.loading}\n                className='anime-cards-section-carousel mb-1'\n              >\n                { Array.from(Array(Math.ceil((topAiringAnimes.loading ? 6 : topAiringAnimes.data?.length || 0) / 6)).keys()).map(i => (\n                  <div key={i}>\n                    <Row gutter={carouselCardColumn * 6} className='anime-cards-section-slide'>\n                      { Array.from(Array(carouselCardColumn).keys()).map(j => (\n                        <Col key={`${i}${j}`} span={24 / carouselCardColumn}>\n                          {topAiringAnimes.loading\n                          ? <Skeleton.Button active key={i} className='skeleton-anime-card'/>\n                          : topAiringAnimes.data[i * carouselCardColumn + j]\n                          && <AnimeCard\n                              onClick={() => history.push(`/anime/${topAiringAnimes.data[i * carouselCardColumn + j].mal_id}`)}\n                              topAiringAnime={topAiringAnimes.data[i * carouselCardColumn + j]}\n                            />}\n                        </Col>\n                      )) }\n                    </Row>\n                  </div>\n                )) }\n              </Carousel>\n            )}\n            <Row justify='end' className='mobile mt-2'>\n              <Col>\n                <Link onClick={() => history.push('/animes')} strong>VIEW MORE</Link>\n              </Col>\n            </Row>\n          </div>\n          <div className='mb-5'>\n            <Row gutter={{xs: 0, md: 32}} align='middle' className='mb-3'>\n              <Col>\n                <Title level={3}>Anime & Manga News</Title>\n              </Col>\n              <Col flex='auto' className='desktop'>\n                <Divider/>\n              </Col>\n              <Col className='desktop'>\n                <Link href='https://myanimelist.net/news' target='_blank' strong>VIEW MORE</Link>\n              </Col>\n            </Row>\n            <Row gutter={[{ md: 24, xl: 40 }, { xs: 8, sm: 8, md: 24, xl: 40 }]}>\n              {checker.isFetched(featuredNewsList)\n              ? featuredNewsList.data.map((news, i) => (\n                  <Col key={i} xs={24} lg={12}>\n                    <ArticleCard\n                      onClick={() => window.open(news.link, '_blank')}\n                      news={news}\n                    />\n                  </Col>\n                )) \n              : Array.from(Array(4).keys()).map(i => (\n                <Col key={i} xs={24} lg={12}>\n                  <ArticleCard\n                    loading={featuredNewsList.loading}\n                  />\n                </Col>\n              ))}\n            </Row>\n            <Row justify='end' className='mobile mt-2'>\n              <Col>\n                <Link href='https://myanimelist.net/news' target='_blank' strong>VIEW MORE</Link>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;","import { useHistory } from 'react-router';\nimport { Button, Typography } from 'antd';\n\nimport './style.less';\nimport { noResultIllustration } from 'assets/images';\n\nconst { Title, Text } = Typography\n\nconst NotFound = () => {\n  const history = useHistory()\n  \n  return (\n    <>\n      <div className='navbar-background'/>\n      <div className='not-found-container centered-flex py-5'>\n        <Title className='color-primary mb-2'>404 Not Found</Title>\n        <img src={noResultIllustration} alt='' className='mb-2'/>\n        <Text className='typography-block typography-fade mb-2'>This page doesn't exist.</Text>\n        <Button onClick={() => history.push('/')} type='primary'>Back to Home</Button>\n      </div>\n    </>\n  )\n}\n\nexport default NotFound;","import { useHistory } from 'react-router-dom'\nimport { Form, Input, Button, Typography, Row, Col, Divider, DatePicker, Checkbox } from 'antd'\nimport { FaArrowLeft } from 'react-icons/fa'\n\nimport { registerIllustration } from 'assets/images'\nimport { validator } from 'helpers'\nimport './style.less'\n\nconst { Text, Title, Link } = Typography\n\nconst Register = () => {\n  const history = useHistory()\n\n  const [registerForm] = Form.useForm()\n\n  return (\n    <Row wrap={false}>\n      <Col flex='480px' className='register-form-container p-5 sm-px-3'>\n        <Row justify='space-between' className='row-vertical register-form-content-container'>\n          <Col>\n            <Row gutter={24} align='middle' className='mb-5'>\n              <Col>\n                <Title>SIGN UP</Title>\n              </Col>\n              <Col flex='auto'>\n                <Divider/>\n              </Col>\n            </Row>\n            <Form form={registerForm} onFinish={values => alert(JSON.stringify(values))} validateTrigger='onSubmit'>\n              <Form.Item\n                name='email'\n                rules={[{validator: validator.email}]}\n                className='mb-2'\n              >\n                <Input size='large' placeholder='Email' />\n              </Form.Item>\n              <Form.Item\n                name='username'\n                help='(Between 2 and 16 characters)'\n                className='mb-2'\n              >\n                <Input size='large' placeholder='Username' />\n              </Form.Item>\n              <Form.Item\n                name='password'\n                rules={[{validator: validator.password}]}\n                className='mb-2'\n              >\n                <Input.Password size='large' placeholder='Password' />\n              </Form.Item>\n              <Form.Item\n                name='birthday'\n                help='Your birthday won’t be shown publicly by default.'\n                className='mb-2'\n              >\n                <DatePicker size='large' placeholder='Birthday'/>\n              </Form.Item>\n              <Form.Item\n                name='agree'\n                className='mb-4'\n              >\n                <Checkbox>\n                  <Text className='typography-small'>I have read and agree to the <Link strong>Term of Service</Link> and <Link strong>Privacy Policy</Link></Text>\n                </Checkbox>\n              </Form.Item>\n              <Row justify='end' className='mb-2'>\n                <Col>\n                  <Form.Item>\n                    <Button\n                      type='primary'\n                      size='large'\n                      htmlType='submit'\n                    >\n                      CREATE ACCOUNT\n                    </Button>\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row justify='end' className='mb-4'>\n                <Col>\n                  <Text className='typography-fade'>Already have an account? </Text><Link strong onClick={() => history.push('/register')}>Login</Link>\n                </Col>\n              </Row>\n            </Form>\n          </Col>\n          <Col>\n            <Link onClick={() => history.goBack()}><FaArrowLeft size={20}/></Link>\n          </Col>\n        </Row>\n      </Col>\n      <Col flex='auto' className='register-banner-container'>\n        <div className='p-5'>\n          <Title type='secondary' className='mb-5 register-banner-title'>Start Using MyAnimeList</Title>\n          <Title level={5} type='secondary' className='register-banner-description'>Join MAL to catalog your anime and manga,</Title>\n          <Title level={5} type='secondary' className='register-banner-description'>compare with your friends, create your own profile, and plenty more.</Title>\n          <Title level={5} type='secondary' className='register-banner-description'>It's FREE.</Title>\n        </div>\n        <img src={registerIllustration} alt='' className='register-illustration'/>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Register;","import { useState, useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n  useHistory\n} from 'react-router-dom';\n\nimport {\n  Home,\n  Anime,\n  Register,\n  Animes,\n  NotFound\n} from 'views'\nimport {\n  Navbar,\n  Footer\n} from 'components'\nimport './App.less';\n\nconst App = () => {\n  const history = useHistory()\n\n  const [showNavbar, setShowNavbar] = useState(false)\n  const [showFooter, setShowFooter] = useState(false)\n\n  useEffect(() => {\n    setShowNavbar(history.location.pathname !== '/register')\n    setShowFooter(history.location.pathname !== '/register')\n    return history.listen(() => {\n      setShowNavbar(history.location.pathname !== '/register')\n      setShowFooter(history.location.pathname !== '/register')\n      if(!(history.location.pathname.startsWith('/anime') && history.location.pathname.split('/')[3])) {\n        window.scrollTo(0, 0)\n      }\n    })\n  }, [history])\n\n  return (\n    <div>\n      {showNavbar && <Navbar/>}\n      <div className='app-content-wrapper'>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/register'>\n            <Register />\n          </Route>\n          <Route exact path='/anime/:id'>\n            <Anime />\n          </Route>\n          <Route exact path='/anime/:id/:menu'>\n            <Anime />\n          </Route>\n          <Route exact path='/animes'>\n            <Animes />\n          </Route>\n          <Route exact path='*'>\n            <NotFound/>\n          </Route>\n        </Switch>\n      </div>\n      {showFooter && <Footer />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport {\n  HashRouter as Router,\n} from 'react-router-dom';\n\nimport './index.css';\nimport store from 'store'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}