{"version":3,"sources":["store/counter.ts","apis/jikan.ts","apis/server.ts","store/anime.ts","store/news.ts","store/index.ts","helpers/checker.tsx","helpers/formatter.tsx","helpers/styler.tsx","helpers/validator.tsx","components/AnimeCard/index.tsx","consts/options.ts","consts/windowSizes.ts","hooks/useInterval.tsx","hooks/useScroll.tsx","hooks/useWindowSize.tsx","components/AnimeCardsSection/index.tsx","components/ArticleCard/index.tsx","components/BannerCarousel/index.tsx","components/Carousel/index.tsx","components/CharacterCard/index.tsx","assets/images/apple-store-badge.png","assets/images/google-play-badge.png","assets/images/register-illustration.png","components/Footer/const.ts","components/Footer/index.tsx","components/LoginModal/index.tsx","components/Navbar/index.tsx","components/ReviewCard/index.tsx","components/StaffCard/index.tsx","components/StoryCardsSection/index.tsx","components/TopicCard/index.tsx","views/Anime/views/Characters/index.tsx","views/Anime/views/Forums/index.tsx","views/Anime/views/News/index.tsx","views/Anime/views/Overview/index.tsx","views/Anime/views/Recommendations/index.tsx","views/Anime/views/Reviews/index.tsx","views/Anime/views/Staff/index.tsx","views/Anime/index.tsx","views/Animes/index.tsx","views/Home/index.tsx","views/Register/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["counterSlice","createSlice","name","initialState","value","reducers","increment","state","actions","baseUrl","jikanAPI","getSeasonAnimes","getCurrentSeason","getTopAiringAnimes","getAnime","id","getAnimes","query","getCharactersAndStaff","getReviews","getArticles","getTopics","getRecommendations","serverAPI","getFeaturedNewsList","currentSeason","loading","topAiringAnimes","data","animes","pagination","pageSize","total","anime","charactersAndStaff","characters","staffList","reviews","articles","topics","recommendations","createAsyncThunk","a","fetch","response","json","slice","top","results","last_page","convertedData","staff","animeSlice","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","action","console","log","selectCurrentSeason","selectTopAiringAnimes","selectAnime","selectAnimes","selectCharactersAndStaff","selectReviews","selectArticles","selectTopics","selectRecommendations","featuredNewsList","undefined","error","newsSlice","alert","selectFeaturedNewsList","news","reducer","combineReducers","counter","store","configureStore","checked","isFetched","Array","isArray","length","formatter","htmlDecode","input","e","document","createElement","innerHTML","childNodes","nodeValue","objectToQuery","object","queries","Object","entries","key","push","join","styler","getScoreColor","score","validator","email","rule","Promise","reject","test","resolve","password","Text","Typography","Paragraph","Title","Link","AnimeCard","seasonAnime","recommendation","props","useState","popoverOpen","setPopoverOpen","className","Button","active","onVisibleChange","visible","placement","content","gutter","justify","wrap","level","title","color","producers","strong","toUpperCase","episodes","genres","map","genre","i","synopsis","align","recommendation_count","src","image_url","alt","ellipsis","options","revGenres","1","2","4","8","10","14","7","22","24","25","27","36","41","formats","TV","OVA","Movie","Special","ONA","Music","revFormats","tv","ova","movie","special","ona","music","sorts","Format","Score","Date","revSorts","type","start_date","windowSizes","xl","min","lg","max","md","sm","xs","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useScroll","lastScrollTop","bodyOffset","body","getBoundingClientRect","scrollY","scrollX","left","scrollDirection","setState","handleScrollEvent","useCallback","prevState","prevLastScrollTop","scrollListener","window","addEventListener","removeEventListener","useWindowSize","width","height","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","ArticleCard","article","rows","moment","date","format","BannerCarousel","newsList","selectedItemIndex","setSelectedItemIndex","autoplay","setAutoplay","handleClickRight","imageURL","onMouseEnter","onMouseLeave","onClick","open","link","description","CustomCarousel","showArrows","carouselRef","ref","prev","next","CharacterCard","character","span","paragraph","hasRightSection","voice_actors","url","role","language","splittedUrl","split","splice","getLargeVoiceActorImage","linkGroups","text","Footer","linkGroup","appleStoreBadge","googlePlayBadge","LoginModal","history","useHistory","Form","useForm","loginForm","getFieldsValue","flex","form","onFinish","values","JSON","stringify","Item","rules","size","placeholder","Password","shouldUpdate","htmlType","disabled","isFieldsTouched","getFieldsError","filter","errors","links","Navbar","search","setSearch","isLoginModalVisible","setIsLoginModalVisible","onChange","target","suffix","icon","onCancel","ReviewCard","review","useSelector","reviewer","username","helpful_count","scores","overall","episodes_seen","overlay","style","whiteSpace","expandable","symbol","replace","Avatar","StaffCard","positions","StoryCardsSection","stories","TopicCard","topic","author_name","author_url","date_posted","replies","last_post","fromNow","Characters","dispatch","useDispatch","totalShowedCharacters","setTotalShowedCharacters","filteredCharacters","setFilteredCharacters","voiceActor","hasMore","loader","loadMore","setTimeout","threshold","from","keys","Forums","checker","News","Select","Option","renderTitle","Recommendations","Reviews","defaultValue","Staff","infoColumnKeys","Anime","useParams","menu","infoColumns","charAt","dataIndex","generateReferenceText","references","reference","renderAnimeTitle","tooltip","title_english","renderActionButtons","ghost","shape","rank","popularity","members","toLocaleString","scored_by","dataSource","aired","licensors","studios","string","getAnimeInfoDataSource","columns","mode","selectedKeys","exact","path","Overview","Home","useLocation","page","setPage","getApiQuery","params","URLSearchParams","location","queryObj","get","q","order_by","end_date","setFieldsValue","genreValue","formatValue","sort","Number","listen","submitForm","newPage","genreLabel","formatLabel","year","onValuesChange","changedValues","allowClear","range","picker","showSizeChanger","carouselCardColumn","setCarouselCardColumn","season_name","season_year","Carousel","dots","Math","ceil","j","mal_id","Register","registerForm","validateTrigger","help","goBack","registerIllustration","App","showNavbar","setShowNavbar","showFooter","setShowFooter","pathname","startsWith","scrollTo","Animes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f6fff27.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nimport { RootState } from 'store'\n\ntype CounterState = {\n  value: number\n}\n\nlet initialState: CounterState = {\n  value: 0\n}\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1\n    }\n  }\n})\n\nexport const {\n  increment\n} = counterSlice.actions\n\nexport const selectCounter = (state: RootState) => state.counter.value\n\nexport default counterSlice.reducer","const baseUrl = 'https://api.jikan.moe/v3'\n\nconst jikanAPI = {\n  getSeasonAnimes: `${baseUrl}/season`,\n  getCurrentSeason: `${baseUrl}/season`,\n  getTopAiringAnimes: `${baseUrl}/top/anime/1/airing`,\n  getAnime: (id: string) => `${baseUrl}/anime/${id}`,\n  getAnimes: (query: string) => `${baseUrl}/search/anime?${query}`,\n  getCharactersAndStaff: (id: string) => `${baseUrl}/anime/${id}/characters_staff`,\n  getReviews: (id: string) => `${baseUrl}/anime/${id}/reviews`,\n  getArticles: (id: string) => `${baseUrl}/anime/${id}/news`,\n  getTopics: (id: string) => `${baseUrl}/anime/${id}/forum`,\n  getRecommendations: (id: string) => `${baseUrl}/anime/${id}/recommendations`\n}\n\nexport default jikanAPI","const baseUrl = 'https://mal-redesign-server.herokuapp.com'\n//const baseUrl = 'http://localhost:5000'\n\nconst serverAPI = {\n  getFeaturedNewsList: `${baseUrl}/v1/news`,\n}\n\nexport default serverAPI","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { RootState } from 'store'\nimport { Anime, TopAnime, Season, SearchedAnime, CharactersAndStaff, Review, Character, Staff, Article, Topic, Recommendation } from 'interfaces/anime'\nimport { jikanAPI } from 'apis'\n\nconst SEARCHED_ANIME_PAGE_SIZE = 20\n\ntype AnimeState = {\n  currentSeason: {\n    data?: Season\n    loading: boolean\n    error?: Error\n  }\n  topAiringAnimes: {\n    data: TopAnime[]\n    loading: boolean\n    error?: Error\n  }\n  animes: {\n    data: SearchedAnime[]\n    pagination: {\n      pageSize: number\n      total: number\n    }\n    loading: boolean\n    error?: Error\n  }\n  anime: {\n    data?: Anime\n    loading: boolean\n    error?: Error\n  }\n  charactersAndStaff: {\n    data?: CharactersAndStaff\n    loading: boolean\n    error?: Error\n  }\n  reviews: {\n    data: Review[]\n    loading: boolean\n    error?: Error\n  }\n  articles: {\n    data: Article[]\n    loading: boolean\n    error?: Error\n  }\n  topics: {\n    data: Topic[]\n    loading: boolean\n    error?: Error\n  }\n  recommendations: {\n    data: Recommendation[]\n    loading: boolean\n    error?: Error\n  }\n}\n\nlet initialState: AnimeState = {\n  currentSeason: {\n    loading: false\n  },\n  topAiringAnimes: {\n    data: [],\n    loading: false\n  },\n  animes: {\n    data: [],\n    pagination: {\n      pageSize: SEARCHED_ANIME_PAGE_SIZE,\n      total: 0\n    },\n    loading: false\n  },\n  anime: {\n    loading: false\n  },\n  charactersAndStaff: {\n    data: {\n      characters: [],\n      staffList: []\n    },\n    loading: false\n  },\n  reviews: {\n    data: [],\n    loading: false\n  },\n  articles: {\n    data: [],\n    loading: false\n  },\n  topics: {\n    data: [],\n    loading: false\n  },\n  recommendations: {\n    data: [],\n    loading: false\n  }\n}\n\nexport const getCurrentSeason = createAsyncThunk(\n  'anime/getCurrentSeason',\n  async () => {\n    const response = await fetch(jikanAPI.getCurrentSeason)\n    const data: Season = await response.json()\n    return {\n      ...data,\n      anime: data.anime.slice(0, 24)\n    }\n  }\n)\n\nexport const getTopAiringAnimes = createAsyncThunk(\n  'anime/getTopAiringAnimes',\n  async () => {\n    const response = await fetch(jikanAPI.getTopAiringAnimes)\n    const data: {\n      top: TopAnime[]\n    } = await response.json()\n    return data.top.slice(0, 24)\n  }\n)\n\nexport const getAnimes = createAsyncThunk(\n  'anime/getAnimes',\n  async (query: string) => {\n    const response = await fetch(jikanAPI.getAnimes(query))\n    const data: {\n      results: SearchedAnime[],\n      last_page: number\n    } = await response.json()\n    return {\n      data: data.results,\n      pagination: {\n        pageSize: SEARCHED_ANIME_PAGE_SIZE,\n        total: SEARCHED_ANIME_PAGE_SIZE * data.last_page\n      }\n    }\n  }\n)\n\nexport const getAnime = createAsyncThunk(\n  'anime/getAnime',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getAnime(id))\n    const data: Anime = await response.json()\n    return data\n  }\n)\n\nexport const getCharactersAndStaff = createAsyncThunk(\n  'anime/getCharactersAndStaff',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getCharactersAndStaff(id))\n    const data: {\n      characters: Character[],\n      staff: Staff[]\n    } = await response.json()\n    const convertedData: CharactersAndStaff = {\n      ...data,\n      staffList: data.staff\n    }\n    return convertedData\n  }\n)\n\nexport const getReviews = createAsyncThunk(\n  'anime/getReviews',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getReviews(id))\n    const data: {\n      reviews: Review[]\n    } = await response.json()\n    return data.reviews\n  }\n)\n\nexport const getArticles = createAsyncThunk(\n  'anime/getArticles',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getArticles(id))\n    const data: {\n      articles: Article[]\n    } = await response.json()\n    return data.articles\n  }\n)\n\nexport const getTopics = createAsyncThunk(\n  'anime/getTopics',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getTopics(id))\n    const data: {\n      topics: Topic[]\n    } = await response.json()\n    return data.topics\n  }\n)\n\nexport const getRecommendations = createAsyncThunk(\n  'anime/getRecommendations',\n  async (id: string) => {\n    const response = await fetch(jikanAPI.getRecommendations(id))\n    const data: {\n      recommendations: Recommendation[]\n    } = await response.json()\n    return data.recommendations\n  }\n)\n\n\nconst animeSlice = createSlice({\n  name: 'anime',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getCurrentSeason.pending, state => {\n      state.currentSeason.loading = true\n    })\n    builder.addCase(getCurrentSeason.fulfilled, (state, { payload }) => {\n      state.currentSeason.data = payload\n      state.currentSeason.loading = false\n    })\n    builder.addCase(getCurrentSeason.rejected, (state, action) => {\n      state.currentSeason.loading = false\n      console.log(action)\n    })\n    builder.addCase(getTopAiringAnimes.pending, state => {\n      state.topAiringAnimes.loading = true\n    })\n    builder.addCase(getTopAiringAnimes.fulfilled, (state, { payload }) => {\n      state.topAiringAnimes.data = payload\n      state.topAiringAnimes.loading = false\n    })\n    builder.addCase(getTopAiringAnimes.rejected, (state, action) => {\n      state.topAiringAnimes.loading = false\n      console.log(action)\n    })\n    builder.addCase(getAnimes.pending, state => {\n      state.animes.loading = true\n    })\n    builder.addCase(getAnimes.fulfilled, (state, { payload }) => {\n      state.animes.data = payload.data\n      state.animes.pagination = payload.pagination\n      state.animes.loading = false\n    })\n    builder.addCase(getAnimes.rejected, (state, action) => {\n      state.animes.loading = false\n      console.log(action)\n    })\n    builder.addCase(getAnime.pending, state => {\n      state.anime.loading = true\n    })\n    builder.addCase(getAnime.fulfilled, (state, { payload }) => {\n      state.anime.data = payload\n      state.anime.loading = false\n    })\n    builder.addCase(getAnime.rejected, (state, action) => {\n      state.anime.loading = false\n      console.log(action)\n    })\n    builder.addCase(getCharactersAndStaff.pending, state => {\n      state.charactersAndStaff.loading = true\n    })\n    builder.addCase(getCharactersAndStaff.fulfilled, (state, { payload }) => {\n      state.charactersAndStaff.data = payload\n      state.charactersAndStaff.loading = false\n    })\n    builder.addCase(getCharactersAndStaff.rejected, (state, action) => {\n      state.charactersAndStaff.loading = false\n      console.log(action)\n    })\n    builder.addCase(getReviews.pending, state => {\n      state.reviews.loading = true\n    })\n    builder.addCase(getReviews.fulfilled, (state, { payload }) => {\n      state.reviews.data = payload\n      state.reviews.loading = false\n    })\n    builder.addCase(getReviews.rejected, (state, action) => {\n      state.reviews.loading = false\n      console.log(action)\n    })\n    builder.addCase(getArticles.pending, state => {\n      state.articles.loading = true\n    })\n    builder.addCase(getArticles.fulfilled, (state, { payload }) => {\n      state.articles.data = payload\n      state.articles.loading = false\n    })\n    builder.addCase(getArticles.rejected, (state, action) => {\n      state.articles.loading = false\n      console.log(action)\n    })\n    builder.addCase(getTopics.pending, state => {\n      state.topics.loading = true\n    })\n    builder.addCase(getTopics.fulfilled, (state, { payload }) => {\n      state.topics.data = payload\n      state.topics.loading = false\n    })\n    builder.addCase(getTopics.rejected, (state, action) => {\n      state.topics.loading = false\n      console.log(action)\n    })\n    builder.addCase(getRecommendations.pending, state => {\n      state.recommendations.loading = true\n    })\n    builder.addCase(getRecommendations.fulfilled, (state, { payload }) => {\n      state.recommendations.data = payload\n      state.recommendations.loading = false\n    })\n    builder.addCase(getRecommendations.rejected, (state, action) => {\n      state.recommendations.loading = false\n      console.log(action)\n    })\n  },\n})\n\nexport const selectCurrentSeason = (state: RootState) => state.anime.currentSeason\nexport const selectTopAiringAnimes = (state: RootState) => state.anime.topAiringAnimes\nexport const selectAnime = (state: RootState) => state.anime.anime\nexport const selectAnimes = (state: RootState) => state.anime.animes\nexport const selectCharactersAndStaff = (state: RootState) => state.anime.charactersAndStaff\nexport const selectReviews = (state: RootState) => state.anime.reviews\nexport const selectArticles = (state: RootState) => state.anime.articles\nexport const selectTopics = (state: RootState) => state.anime.topics\nexport const selectRecommendations = (state: RootState) => state.anime.recommendations\n\nexport default animeSlice.reducer","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { RootState } from 'store'\nimport { News } from 'interfaces/news'\nimport { serverAPI } from 'apis'\n\ntype AnimeState = {\n  featuredNewsList: {\n    data: News[] | undefined\n    loading: boolean\n    error: Error | undefined\n  }\n}\n\nlet initialState: AnimeState = {\n  featuredNewsList: {\n    data: undefined,\n    loading: false,\n    error: undefined\n  }\n}\n\nexport const getFeaturedNewsList = createAsyncThunk(\n  'news/getFeaturedNewsList',\n  async () => {\n    console.log(serverAPI.getFeaturedNewsList)\n    const response = await fetch(serverAPI.getFeaturedNewsList)\n    const data: News[] = await response.json()\n    return data\n  }\n)\n\nconst newsSlice = createSlice({\n  name: 'news',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getFeaturedNewsList.pending, state => {\n      state.featuredNewsList.loading = true\n    })\n    builder.addCase(getFeaturedNewsList.fulfilled, (state, { payload }) => {\n      state.featuredNewsList.data = payload\n      state.featuredNewsList.loading = false\n    })\n    builder.addCase(getFeaturedNewsList.rejected, (state, action) => {\n      state.featuredNewsList.loading = false\n      alert('error')\n      console.log(action)\n    })\n  },\n})\n\nexport const selectFeaturedNewsList = (state: RootState) => state.news.featuredNewsList\n\nexport default newsSlice.reducer","import { configureStore, Action, combineReducers } from '@reduxjs/toolkit'\nimport { ThunkAction } from 'redux-thunk'\n\nimport counter from 'store/counter'\nimport anime from 'store/anime'\nimport news from 'store/news'\n\nconst reducer = combineReducers({\n  counter,\n  anime,\n  news\n})\n\nexport type RootState = ReturnType<typeof reducer>\n\nconst store = configureStore({\n  reducer\n})\n\nexport type AppDispatch = typeof store.dispatch\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store","// check if store object is fetched and not empty\nconst isFetched = ({\n  data,\n  loading\n} : {\n  data?: any\n  loading: boolean\n}) => {\n  if(loading) return false\n  if(Array.isArray(data)) return data.length > 0\n  return !!data\n}\n\nconst checked = {\n  isFetched\n}\n\nexport default checked","const htmlDecode = (input: string) => {\n  var e = document.createElement('div');\n  e.innerHTML = input;\n  return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n}\n\nconst objectToQuery = (object: {[key: string]: any}) => {\n  let queries = []\n  for (const [key, value] of Object.entries(object)) {\n    if(Array.isArray(object[key])) object[key].length > 0 && queries.push(`${key}=${value}`)\n    else object[key] && queries.push(`${key}=${value}`)\n  }\n  return queries.join('&')\n}\n\nconst formatter = {\n  htmlDecode,\n  objectToQuery\n}\n\nexport default formatter","const getScoreColor = (score: number) : 'success' | 'warning' | 'error' => {\n  if(score < 4) return 'error'\n  if(score < 7) return 'warning'\n  return 'success'\n}\n\nconst styler = {\n  getScoreColor,\n}\n\nexport default styler","import { RuleObject } from 'rc-field-form/lib/interface';\n\nconst email = (rule: RuleObject, value: string) => {\n  if(!value) {\n    return Promise.reject('Email cannot be empty')\n  }\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  if(!re.test(value)) {\n    return Promise.reject('Email format is invalid')\n  }\n  return Promise.resolve()\n}\n\nconst password = (rule: RuleObject, value: string) => {\n  if(!value) {\n    return Promise.reject('Password cannot be empty')\n  }\n  return Promise.resolve()\n}\n\nconst validator = {\n  email,\n  password\n}\n\nexport default validator","import { HTMLAttributes, useState } from 'react'\nimport { Skeleton, Typography, Popover, Row, Col, Tag } from 'antd';\nimport { FaHeart, FaStar, FaTrophy, FaUser, FaUserCheck } from 'react-icons/fa'\n\nimport { Anime, Recommendation, SearchedAnime, SeasonAnime } from 'interfaces/anime'\nimport { styler } from 'helpers'\nimport './style.less';\n\nconst { Text, Paragraph, Title, Link } = Typography;\n\ninterface AnimeCardProps extends HTMLAttributes<HTMLDivElement> {\n  anime?: SearchedAnime\n  seasonAnime?: SeasonAnime\n  recommendation?: Recommendation\n  loading?: boolean\n}\n\nconst AnimeCard = ({\n  anime,\n  seasonAnime,\n  recommendation,\n  loading,\n  ...props\n}: AnimeCardProps) => {\n  const [popoverOpen, setPopoverOpen] = useState(false)\n\n  if(!anime && !seasonAnime && !recommendation) return (\n    <div {...props} className='anime-card no-pointer'>\n      <Skeleton.Button active={loading} className='skeleton-stretch anime-card-skeleton'/>\n    </div>\n  )\n\n  const renderPopoverContent = () => {\n    if(seasonAnime) {\n      return (\n        <div className='anime-card-popover-container p-2'>\n          <Row gutter={16} justify='space-between' wrap={false} className='mb-1'>\n            <Col>\n              <Title level={5}>{seasonAnime.title}</Title>\n            </Col>\n            <Col>\n              <Tag color={styler.getScoreColor(seasonAnime.score)}><FaStar/> {seasonAnime.score}</Tag>\n            </Col>\n          </Row>\n          {seasonAnime.producers[0] && <Link strong>{seasonAnime.producers[0].name.toUpperCase()}</Link>}\n          {seasonAnime.episodes && <div><Text className='typography-fade'>{seasonAnime.episodes} episodes</Text></div>}\n          {seasonAnime.genres\n          && <Row gutter={8} className='mt-1'>\n              {seasonAnime.genres.map((genre, i) => (\n                <Col key={i} className='mb-1'>\n                  <Tag color='blue' className='clickable'>{genre.name}</Tag>\n                </Col>\n              ))}\n            </Row>}\n          <div className='anime-card-popover-synopsis-container mb-1'>\n            <Paragraph>{seasonAnime.synopsis}</Paragraph>\n          </div>\n          <Row justify='end'>\n            <Col>\n              <Link className='typography-small' strong>VIEW DETAIL</Link>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n    if(recommendation) {\n      return (\n        <div className='anime-card-popover-container p-2'>\n          <Title level={5} className='mb-1'>{recommendation.title}</Title>\n          <Row align='middle' gutter={8}>\n            <Col>\n              <Tag color='success'><Text><FaUserCheck/> {recommendation.recommendation_count}</Text></Tag>\n            </Col>\n            <Col>\n              <Link className='typography-small'>VIEW DETAIL</Link>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Popover onVisibleChange={visible => setPopoverOpen(visible)} placement='rightTop' content={renderPopoverContent()}>\n      <div {...props} className={`anime-card ${popoverOpen ? 'hovered' : ''}`}>\n        <img src={anime?.image_url || seasonAnime?.image_url || recommendation?.image_url} alt='' className='anime-card-image'/>\n        <div className='anime-card-title-container-blur'/>\n        <div className='anime-card-title-container p-1'>\n          <Paragraph strong className='anime-card-title' ellipsis >{anime?.title || seasonAnime?.title || recommendation?.title}</Paragraph>\n        </div>\n      </div>\n    </Popover>\n  );\n}\n\nexport default AnimeCard;","const genres = {\n  'Action': 1,\n  'Adventure': 2,\n  'Comedy': 4,\n  'Drama': 8,\n  'Fantasy': 10,\n  'Horror': 14,\n  'Mystery': 7,\n  'Romance': 22,\n  'Sci-Fi': 24,\n  'Shoujo': 25,\n  'Shounen': 27,\n  'Slice of Life': 36,\n  'Thriller': 41\n}\n\nconst revGenres = {\n  1: 'Action',\n  2: 'Adventure',\n  4: 'Comedy',\n  8: 'Drama',\n  10: 'Fantasy',\n  14: 'Horror',\n  7: 'Mystery',\n  22: 'Romance',\n  24: 'Sci-Fi',\n  25: 'Shoujo',\n  27: 'Shounen',\n  36: 'Slice of Life',\n  41: 'Thriller'\n}\n\nconst formats = {\n  TV: 'tv',\n  OVA: 'ova',\n  Movie: 'movie',\n  Special: 'special',\n  ONA: 'ona',\n  Music: 'music'\n}\n\nconst revFormats = {\n  tv: 'TV',\n  ova: 'OVA',\n  movie: 'Movie',\n  special: 'Special',\n  ona: 'ONA',\n  music: 'Music'\n}\n\nconst sorts = {\n  Title: 'title',\n  Format: 'type',\n  Score: 'score',\n  Date: 'start_date',\n}\n\nconst revSorts = {\n  title: 'Title',\n  type: 'Format',\n  score: 'Score',\n  start_date: 'Date',\n}\n\nconst options = {\n  genres,\n  revGenres,\n  formats,\n  revFormats,\n  sorts,\n  revSorts\n}\n\nexport default options;","const windowSizes = {\n  xl: { min: 1200 },\n  lg: { min: 992, max: 1199 },\n  md: { min: 768, max: 991 },\n  sm: { min: 576, max: 767 },\n  xs: { max: 575 }\n}\n\n//@xl: ~\"only screen and (min-width: 1200px)\";\n//@lg: ~\"only screen and (min-width: 992px) and (max-width: 1119px)\";\n//@md: ~\"only screen and (min-width: 768px) and (max-width: 991px)\";\n//@sm: ~\"only screen and (min-width: 576px) and (max-width: 767px)\";\n//@xs: ~\"only screen and (max-width: 575px)\";\n\nexport default windowSizes;","import { useRef, useEffect } from 'react'\n\nconst useInterval = (callback: () => void, delay: number) => {\n  const savedCallback: any = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval","import { useState, useCallback, useEffect } from 'react'\n\nconst useScroll = () => {\n  const [state, setState] = useState({\n    lastScrollTop: 0,\n    bodyOffset: document.body.getBoundingClientRect(),\n    scrollY: document.body.getBoundingClientRect().top,\n    scrollX: document.body.getBoundingClientRect().left,\n    scrollDirection: '', // down, up\n  })\n\n  const handleScrollEvent = useCallback((e) => {\n    setState((prevState) => {\n      const prevLastScrollTop = prevState.lastScrollTop\n      const bodyOffset = document.body.getBoundingClientRect()\n\n      return {\n        lastScrollTop: -bodyOffset.top,\n        bodyOffset: bodyOffset,\n        scrollY: -bodyOffset.top,\n        scrollX: bodyOffset.left,\n        scrollDirection: prevLastScrollTop > -bodyOffset.top ? 'down' : 'up',\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = (e: Event) => {\n      handleScrollEvent(e)\n    }\n    window.addEventListener('scroll', scrollListener)\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n  }, [handleScrollEvent])\n\n  return {\n    scrollY: state.scrollY,\n    scrollX: state.scrollX,\n    scrollDirection: state.scrollDirection,\n  }\n}\n\nexport default useScroll","import { useState, useEffect } from 'react'\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{\n    width: number,\n    height: number\n  }>({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport default useWindowSize","import { useState, useEffect } from 'react'\nimport { Typography, Row, Col, Divider, Skeleton } from 'antd';\n\nimport { Carousel, AnimeCard } from 'components'\nimport { windowSizes } from 'consts';\nimport { useWindowSize } from 'hooks'\nimport { Anime } from 'interfaces/anime'\nimport './style.less';\n\nconst { Title, Link } = Typography;\n\ntype AnimeCardsSectionProps = {\n  title: string\n  animes: Anime[]\n  loading?: boolean\n}\n\nconst AnimeCardsSection = ({\n  title,\n  animes,\n  loading\n}: AnimeCardsSectionProps) => {\n  const { width } = useWindowSize();\n\n  const [carouselCardColumn, setCarouselCardColumn] = useState(6);\n\n  useEffect(() => {\n    if(width <= windowSizes.lg.max) {\n      setCarouselCardColumn(4);\n      return\n    }\n    setCarouselCardColumn(6);\n  }, [width])\n\n  return (\n    <div className='mb-5'>\n      {/*<Row gutter={{xs: 0, md: 32}} align='middle' className='mb-3'>\n        <Col>\n          <Title level={3}>{title}</Title>\n        </Col>\n        <Col flex='auto' className='desktop'>\n          <Divider/>\n        </Col>\n        <Col className='desktop'>\n          <Link strong>VIEW MORE</Link>\n        </Col>\n      </Row>\n      {width <= windowSizes.md.max ? (\n        <div className='anime-cards-section-swiper'>\n          {loading\n          ? Array.from(Array(6).keys()).map(i => \n              <div key={i} className='anime-cards-section-swiper-card-container mr-2'>\n                <Skeleton.Button key={i} active className='skeleton-anime-card'/>\n              </div>\n            )\n          : animes.map((anime, i) => \n              <div key={i} className='anime-cards-section-swiper-card-container mr-2'>\n                <AnimeCard\n                  anime={anime}\n                />\n              </div>\n            )}\n        </div>\n      ) : (\n        <Carousel\n          dots={false}\n          showArrows={!loading}\n          className='anime-cards-section-carousel mb-1'\n        >\n          { Array.from(Array(Math.ceil((loading ? 6 : animes.length) / 6)).keys()).map(i => (\n            <div key={i}>\n              <Row gutter={carouselCardColumn * 6} className='anime-cards-section-slide'>\n                { Array.from(Array(carouselCardColumn).keys()).map(j => (\n                  <Col key={`${i}${j}`} span={24 / carouselCardColumn}>\n                    {loading\n                    ? <Skeleton.Button active key={i} className='skeleton-anime-card'/>\n                    : animes[i * carouselCardColumn + j]\n                    && <AnimeCard\n                        onClick={() => window.open(animes[i * carouselCardColumn + j].url, '_blank')}\n                        anime={animes[i * carouselCardColumn + j]}\n                      />}\n                  </Col>\n                )) }\n              </Row>\n            </div>\n          )) }\n        </Carousel>\n      )}\n      <Row justify='end' className='mobile mt-2'>\n        <Col>\n          <Link strong>VIEW MORE</Link>\n        </Col>\n      </Row>*/}\n    </div>\n  );\n}\n\nexport default AnimeCardsSection;","import { HTMLAttributes } from 'react';\nimport { Row, Col, Typography, Skeleton } from 'antd';\nimport { FaRegCalendarAlt } from 'react-icons/fa'\nimport moment from 'moment'\n\nimport { windowSizes } from 'consts'\nimport { useWindowSize } from 'hooks'\nimport { News } from 'interfaces/news'\nimport './style.less';\nimport { Article } from 'interfaces/anime';\n\nconst { Title, Text } = Typography;\n\ninterface ArticleCardProps extends HTMLAttributes<HTMLDivElement> {\n  article?: Article\n  loading?: boolean\n}\n\nconst ArticleCard = ({\n  article,\n  loading,\n  ...props\n}: ArticleCardProps) => {\n  const { width } = useWindowSize();\n\n  if(!article) return (\n    <Row {...props} className='article-card'>\n      <Col xs={8} md={12}>\n        <Skeleton.Button active={loading} className='skeleton-stretch'/>\n      </Col>\n      <Col xs={16} md={12} className='article-card-info-container p-2'>\n        <Skeleton active={loading}/>\n      </Col>\n    </Row>\n  )\n\n  const { title, image_url } = article;\n\n  return (\n    <Row {...props} className='article-card'>\n      <Col xs={8} lg={12}>\n        <img src={image_url} alt='' className='article-card-image'/>\n      </Col>\n      <Col xs={16} lg={12} className='article-card-info-container p-2'>\n        <Title level={4} ellipsis={{rows: width < windowSizes.md.min ? 3 : 4}}>\n        {title}\n        </Title>\n        <Row gutter={4}>\n          <Col className='centered-flex'>\n            <FaRegCalendarAlt className='article-card-calendar-icon'/>\n          </Col>\n          <Col>\n            <Text>{moment(article.date).format('MMM DD, YYYY')}</Text>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ArticleCard;","import { useState } from 'react';\nimport { Row, Col, Typography, Tag, Skeleton } from 'antd';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\n\nimport { useInterval } from 'hooks'\nimport { News } from 'interfaces/news'\nimport './style.less';\n\nconst { Paragraph, Title } = Typography\n\ntype BannerCarouselProps = {\n  newsList: News[]\n  loading?: boolean\n}\n\nconst BannerCarousel = ({\n  newsList,\n  loading\n}: BannerCarouselProps) => {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(0);\n  const [autoplay, setAutoplay] = useState(true);\n\n  useInterval(() => {\n    if(autoplay) {\n      handleClickRight();\n    }\n  }, 4000);\n\n  const handleClickRight = () => {\n    if(selectedItemIndex === newsList.length - 1) {\n      setSelectedItemIndex(0);\n    } else {\n      setSelectedItemIndex(selectedItemIndex + 1);\n    }\n  }\n\n  const handleClickLeft = () => {\n    if(selectedItemIndex === 0) {\n      setSelectedItemIndex(newsList.length - 1);\n    } else {\n      setSelectedItemIndex(selectedItemIndex - 1);\n    }\n  }\n\n  return (\n    <div className='banner-carousel-wrapper'>\n      {!loading\n      && newsList.map((news, i) => (\n        <img key={i} src={newsList[i].imageURL} alt='' className={`banner-carousel-background-image ${selectedItemIndex === i ? 'selected' : ''}`} />\n      ))}\n      <div className='content-container pt-4 pb-5'>\n        <div\n          onMouseEnter={() => setAutoplay(false)}\n          onMouseLeave={() => setAutoplay(true)}\n          className='banner-carousel-cards-container'\n        >\n          {loading\n          ? <div \n            className='banner-carousel-card selected loading'>\n              <Row className='banner-carousel-card-content-container'>\n                <Col md={14} xs={24}>\n                  <Skeleton.Button active className='skeleton-stretch'/>\n                </Col>\n                <Col md={10} xs={24} className='banner-carousel-card-info-container p-3'>\n                  <Skeleton active/>\n                </Col>\n              </Row>\n            </div>\n          : newsList.map((news, i) => (\n            <div\n              key={i}\n              onClick={() => window.open(news.link, '_blank')}\n              className={`banner-carousel-card ${selectedItemIndex === i ? 'selected' : ''}`}\n            >\n              <Row>\n                <Col md={14} xs={24}>\n                  <img src={news.imageURL} alt='' className='banner-carousel-card-image' />\n                </Col>\n                <Col md={10} xs={24} className='banner-carousel-card-info-container p-3'>\n                  <div>\n                    <Row gutter={8} className='mb-2'>\n                      <Col>\n                        <Tag color='blue'>FEATURED</Tag>\n                      </Col>\n                      <Col>\n                        <Tag color='blue'>NEWS</Tag>\n                      </Col>\n                    </Row>\n                    <Title level={2} ellipsis={{rows: 3}} className='mb-2'>{news.title}</Title>\n                    <Paragraph ellipsis={{rows: 5}} className='desktop mb-2'>{news.description}</Paragraph>\n                  </div>\n                  <Row gutter={8}>\n                    {newsList.map((news, i) => (\n                      <Col key={i}>\n                        <div className={`banner-carousel-pointer ${selectedItemIndex === i ? 'selected' : ''}`}/>\n                      </Col>\n                    ))}\n                  </Row>\n                </Col>\n              </Row>\n            </div>\n          )) }\n          {!loading\n          && <>\n              <FaChevronLeft onClick={handleClickLeft} className='banner-carousel-left-icon' />\n              <FaChevronRight onClick={handleClickRight} className='banner-carousel-right-icon' />\n            </>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BannerCarousel;","import { useRef } from 'react';\nimport { Carousel, CarouselProps } from 'antd';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\n\nimport './style.less';\n\ninterface CustomCarouselProps extends CarouselProps {\n  showArrows?: boolean\n}\n\nconst CustomCarousel = ({\n  showArrows = true,\n  ...props\n}: CustomCarouselProps) => {\n  const carouselRef = useRef<any>();\n\n  const handleClickRight = () => {\n    carouselRef.current?.next();\n  }\n\n  const handleClickLeft = () => {\n    carouselRef.current?.prev();\n  }\n\n  return (\n    <div className='carousel-wrapper'>\n      <Carousel\n        {...props}\n        ref={ref => {\n          carouselRef.current = ref;\n        }}\n      />\n      {showArrows\n      && <><FaChevronLeft onClick={handleClickLeft} className='carousel-left-icon' />\n      <FaChevronRight onClick={handleClickRight} className='carousel-right-icon' /></>}\n    </div>\n  );\n}\n\nexport default CustomCarousel;","import { HTMLAttributes } from 'react';\nimport { Row, Col, Typography, Skeleton } from 'antd';\n\nimport { Character } from 'interfaces/anime'\nimport './style.less';\n\nconst { Text, Link, Paragraph  } = Typography;\n\ninterface CharacterCardProps extends HTMLAttributes<HTMLDivElement> {\n  character?: Character\n  loading?: boolean\n}\n\nconst CharacterCard = ({\n  character,\n  loading,\n  ...props\n}: CharacterCardProps) => {\n\n  if(!character) {\n    return (\n      <Row {...props} className='character-card'>\n        <Col xs={8} md={4}>\n          <Skeleton.Button active={loading} className='skeleton-stretch'/>\n        </Col>\n        <Col span={16} className='p-2'>\n          <Skeleton active={loading} paragraph={{rows: 1}}/>\n        </Col>\n        <Col xs={8} md={4}>\n          <Skeleton.Button active={loading} className='skeleton-stretch'/>\n        </Col>\n      </Row>\n    );\n  }\n\n  const getLargeVoiceActorImage = () => {\n    const splittedUrl = character.voice_actors[0].image_url.split(\"/\")\n    splittedUrl.splice(3, 2)\n    return splittedUrl.join('/').split('?')[0]\n  }\n\n  const hasRightSection = character.voice_actors[0]\n\n  return (\n    <Row {...props} className='character-card'>\n      <Col span={4}>\n        <img src={character.image_url} alt='' className='character-card-image'/>\n      </Col>\n      <Col span={16} className='character-card-info-container p-2'>\n        <Row gutter={8} justify='space-between' wrap={false}>\n          <Col span={12}>\n            <Paragraph ellipsis={{rows: 2}}>\n              <Link strong onClick={() => window.open(character.url)}>{character.name}</Link>\n            </Paragraph>\n            <Text className='typography-block'>{character.role}</Text>\n          </Col>\n          {hasRightSection && (\n            <Col span={12} className='character-card-voice-actor-name-container'>\n              <Paragraph ellipsis={{rows: 2}}>\n                <Link strong onClick={() => window.open(character.voice_actors[0].url)}>{character.voice_actors[0].name}</Link>\n              </Paragraph>\n              <Text className='typography-block'>{character.voice_actors[0].language}</Text>\n            </Col>\n          )}\n        </Row>\n      </Col>\n      {hasRightSection && (\n        <Col span={4}>\n          <img src={getLargeVoiceActorImage()} alt='' className='character-card-image'/>\n        </Col>\n      )}\n    </Row>\n  );\n}\n\nexport default CharacterCard;","export default __webpack_public_path__ + \"static/media/apple-store-badge.6d21b830.png\";","export default __webpack_public_path__ + \"static/media/google-play-badge.d2b386b1.png\";","export default __webpack_public_path__ + \"static/media/register-illustration.91487de2.png\";","export const linkGroups = [\n  [\n    {\n      text: 'About'\n    },\n    {\n      text: 'Press Room'\n    },\n    {\n      text: 'Support'\n    },\n    {\n      text: 'Advertising'\n    },\n    {\n      text: 'FAQ'\n    }\n  ],\n  [\n    {\n      text: 'Terms'\n    },\n    {\n      text: 'Privacy'\n    },\n    {\n      text: 'Cookie'\n    },\n    {\n      text: 'Notice at Collection'\n    },\n    {\n      text: 'Sitemap'\n    }\n  ]\n]","\nimport { Typography, Row, Col, Divider } from 'antd'\nimport { ImFacebook2, ImTwitter } from 'react-icons/im'\n\nimport { appleStoreBadge, googlePlayBadge } from 'assets/images'\nimport { linkGroups } from './const'\nimport './style.less'\n\nconst { Text, Link } = Typography\n\nconst Footer = () => {\n\n  return (\n    <div className='footer-wrapper'>\n      <div className='content-container py-4'>\n        <Row justify='space-between' className='row-vertical-sm'>\n          <Col>\n            <Row gutter={[{xs: 0, md: 40}, 16]} className='row-vertical-sm'>\n              <Col className='centered-flex-sm'>\n                <Text type='secondary' className='footer-logo'>MAL</Text>\n              </Col>\n              {linkGroups.map((linkGroup, i) => (\n                <Col key={i}>\n                  <Row gutter={[0,8]} className='row-vertical'>\n                    {linkGroup.map((link, i) => (\n                      <Col key={i} className='centered-flex-sm'>\n                        <Link type='secondary'>{link.text}</Link>\n                      </Col>\n                    ))}\n                  </Row>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Divider className='mobile my-4'/>\n          <Col>\n            <Row gutter={{xs: 0, md: 40}} className='row-vertical-sm'>\n              <Col className='centered-flex-sm'>\n                <div>\n                  <div className='mb-1'>\n                    <Text type='secondary' className='typography-fade mb-1'>Follow Us</Text>\n                  </div>\n                  <Row gutter={16}>\n                    <Col>\n                      <ImFacebook2 className='footer-social-media-icon'/> \n                    </Col>\n                    <Col>\n                      <ImTwitter className='footer-social-media-icon'/> \n                    </Col>\n                  </Row>\n                </div>\n              </Col>\n              <Divider className='mobile my-4'/>\n              <Col className='centered-flex-sm'>\n                <div>\n                  <div className='mb-1'>\n                    <Text type='secondary' className='typography-fade'>Get the App</Text>\n                  </div>\n                  <div className='mb-1'>\n                    <img src={appleStoreBadge} alt='' className='footer-app-download-badge'/>\n                  </div>\n                  <div>\n                    <img src={googlePlayBadge} alt='' className='footer-app-download-badge'/>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Divider className='my-4'/>\n        <div>\n          <Text type='secondary' className='typography-fade'>MyAnimeList.net is a property of MyAnimeList Co.,Ltd</Text>\n          <br></br>\n          <Text type='secondary' className='typography-fade'>©2021 All Rights Reserved.</Text>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer","import { useHistory } from 'react-router-dom'\nimport { Modal, ModalProps, Typography, Form, Input, Button, Row, Col, Divider } from 'antd';\n\nimport { validator } from 'helpers'\nimport './style.less';\n\nconst { Text, Title, Link } = Typography;\n\ninterface LoginModalProps extends ModalProps {\n}\n\nconst LoginModal = ({\n  ...props\n}: LoginModalProps) => {\n  const history = useHistory()\n\n  const [loginForm] = Form.useForm()\n  const { getFieldsValue } = loginForm\n\n  return (\n    <Modal {...props}>\n      <div className='p-3 sm-px-0'>\n        <Row align='middle' gutter={24} className='mb-4'>\n          <Col>\n            <Title>LOGIN</Title>\n          </Col>\n          <Col flex='auto'>\n            <Divider />\n          </Col>\n        </Row>\n        <Form form={loginForm} onFinish={values => alert(JSON.stringify(values))}>\n          <Form.Item\n            name=\"email\"\n            rules={[{validator: validator.email}]}\n            className='mb-2'\n          >\n            <Input size='large' placeholder='Email' />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{validator: validator.password}]}\n          >\n            <Input.Password size='large' placeholder='Password' />\n          </Form.Item>\n          <Row justify='end' className='mb-4'>\n            <Col>\n              <Link className='typography-small'>Forgot password?</Link>\n            </Col>\n            <Col>\n            </Col>\n          </Row>\n          <Row justify='end' className='mb-1'>\n            <Col>\n              <Form.Item shouldUpdate>\n                {() => (\n                  <Button\n                    size='large'\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    disabled={\n                      !loginForm.isFieldsTouched(true) ||\n                      loginForm.getFieldsError().filter(({ errors }) => errors.length)\n                        .length > 0\n                    }\n                  >\n                    LOGIN\n                  </Button>\n                )}\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row justify='end'>\n            <Col>\n              <Text className='typography-fade'>Not registered? </Text><Link onClick={() => history.push('/register')}>Create an account</Link>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    </Modal>\n  )\n}\n\nexport default LoginModal;","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Typography, Popover, Input, Button } from 'antd';\nimport { FaSearch } from 'react-icons/fa';\nimport { BiLogInCircle } from 'react-icons/bi';\n\nimport { LoginModal } from 'components'\nimport { useScroll } from 'hooks'\nimport './style.less';\n\nconst { Title, Text, Link } = Typography;\n\nconst links = [\n  {\n    text: 'ANIME'\n  },\n  {\n    text: 'MANGA'\n  },\n  {\n    text: 'COMMUNITY'\n  },\n  {\n    text: 'INDUSTRY'\n  },\n  {\n    text: 'WATCH'\n  },\n  {\n    text: 'READ'\n  },\n  {\n    text: 'HELP'\n  }\n]\n\nconst Navbar = () => {\n  const history = useHistory()\n\n  const [search, setSearch] = useState('')\n  const [isLoginModalVisible, setIsLoginModalVisible] = useState(false)\n\n  const { scrollY } = useScroll();\n\n  return (\n    <>\n    <div className={`navbar-wrapper ${(scrollY > 1) ? 'bg-primary' : ''} py-2`}>\n      <div className='content-container'>\n        <Row align='middle' justify='space-between'>\n          <Col onClick={() => history.push('/')} className='clickable'>\n            <Title type='secondary' level={3} className='navbar-logo'>MyAnimeList</Title>\n          </Col>\n          <Col className='desktop'>\n            <Row gutter={16} align='middle'>\n              { links.map((link, i) => (\n                <Popover\n                  key={i}\n                  placement='bottomLeft'\n                  content={\n                    <div className='py-2'>\n                      <div className='navbar-popover-option-container py-1 px-3'>\n                        <Text>Option</Text>\n                      </div>\n                      <div className='navbar-popover-option-container py-1 px-3'>\n                        <Text>Option Long</Text>\n                      </div>\n                      <div className='navbar-popover-option-container py-1 px-3'>\n                        <Text>Option</Text>\n                      </div>\n                    </div>\n                  }\n                >\n                  <Col>\n                    <Link type='secondary' strong>{link.text}</Link>\n                  </Col>\n                </Popover>\n              )) }\n              <Col>\n                <Input\n                  value={search}\n                  onChange={e => setSearch(e.target.value)}\n                  suffix={<FaSearch className='navbar-search-icon'/>}\n                  className={`navbar-search ${search ? 'expanded' : ''}`}\n                />\n              </Col>\n              <Col>\n                <Button\n                  type='default'\n                  icon={<BiLogInCircle className='mr-1'/>}\n                  onClick={() => setIsLoginModalVisible(true)}\n                >\n                  SIGN IN\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    </div>\n    <LoginModal visible={isLoginModalVisible} onCancel={() => setIsLoginModalVisible(false)}/>\n    </>\n  );\n}\n\nexport default Navbar;","import { HTMLAttributes } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Row, Col, Typography, Avatar, Tag, Skeleton, Tooltip,  } from 'antd'\nimport { ImArrowDown, ImArrowUp } from 'react-icons/im'\nimport { AiFillStar } from 'react-icons/ai'\nimport moment from 'moment'\n\nimport { Review } from 'interfaces/anime'\nimport {\n  selectAnime\n} from 'store/anime'\nimport { formatter, styler } from 'helpers'\nimport './style.less'\nimport { FaThumbsUp } from 'react-icons/fa'\n\nconst { Text, Link, Title, Paragraph } = Typography;\n\ninterface ReviewCardProps extends HTMLAttributes<HTMLDivElement> {\n  review?: Review\n  loading?: boolean\n}\n\nconst ReviewCard = ({\n  review,\n  loading\n}: ReviewCardProps) => {\n  const anime = useSelector(selectAnime)\n\n  if(!review) {\n    return (\n      <Row gutter={16} wrap={false} className='mb-4'>\n        <Col className='anime-review-card-reviewer-profile-container'>\n          <Skeleton.Avatar active={loading} className='skeleton-avatar-large'/>\n        </Col>\n        <Col flex='auto'>\n          <div className='anime-review-card-item-arrow'/>\n          <div className='anime-review-card-item-container p-2'>\n            <Row justify='space-between' wrap={false} className='mb-1'>\n              <Skeleton active={loading}/>\n            </Row>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n\n  return (\n    <Row gutter={16} wrap={false}>\n      <Col className='anime-review-card-reviewer-profile-container desktop'>\n        <Avatar src={review.reviewer.image_url} size='large' className='mb-1'/>\n        <Link className='anime-review-card-reviewer-name typography-block typography-small'>{review.reviewer.username}</Link>\n      </Col>\n      <Col flex='auto'>\n        <div className='anime-review-card-item-arrow desktop'/>\n        <div className='anime-review-card-item-container p-2'>\n        <Row gutter={8} wrap={false} justify='space-between' className='mobile'>\n          <Col>\n            <Row wrap={false} gutter={8} align='middle' className='mb-1'>\n              <Col>\n                <Avatar src={review.reviewer.image_url}/>\n              </Col>\n              <Col>\n                <Paragraph ellipsis={{rows: 2}}>\n                  <Link>{review.reviewer.username}</Link>\n                </Paragraph>\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Text className='color-success clickable'>\n              <FaThumbsUp/> {review.helpful_count}\n            </Text>\n          </Col>\n        </Row>\n          <Row justify='space-between' wrap={false} className='mb-1'>\n            <Col>\n              <Row gutter={8} wrap={false}>\n                <Col>\n                  <Tag color={styler.getScoreColor(review.reviewer.scores.overall)}>\n                    <Row gutter={4} wrap={false} align='middle'>\n                      <Col>\n                        <Title level={4} className='centered-flex'><AiFillStar/></Title>\n                      </Col>\n                      <Col>\n                        <Title level={4}>{review.reviewer.scores.overall}</Title>\n                      </Col>\n                    </Row>\n                  </Tag>\n                </Col>\n                <Col>\n                  <Text strong className='typography-fade typography-block'>{moment(review.date).format('MMM DD, YYYY')}</Text>\n                  <Text className='typography-fade typography-block typography-small'>{review.reviewer.episodes_seen} of {anime.data?.episodes} episodes seen</Text>\n                </Col>\n              </Row>\n            </Col>\n            <Col className='desktop'>\n              <Tooltip overlay={\n                <Text type='secondary'>{review.helpful_count} users found this helpful</Text>\n              }>\n                <Title level={5} className='color-success clickable'>\n                  <FaThumbsUp/> {review.helpful_count}\n                </Title>\n              </Tooltip>\n            </Col>\n          </Row>\n          <Paragraph style={{whiteSpace: 'pre-line'}} ellipsis={{rows: 4, expandable: true, symbol: 'More'}} >\n            {formatter.htmlDecode(review.content.replace(/\\\\n/g, \"\"))}\n          </Paragraph>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ReviewCard;","import { HTMLAttributes } from 'react';\nimport { Row, Col, Typography, Skeleton } from 'antd';\n\nimport { Staff } from 'interfaces/anime'\nimport './style.less';\n\nconst { Text, Link, Paragraph } = Typography;\n\ninterface StaffCardProps extends HTMLAttributes<HTMLDivElement> {\n  staff?: Staff\n  loading?: boolean\n}\n\nconst StaffCard = ({\n  staff,\n  loading,\n  ...props\n}: StaffCardProps) => {\n\n  if(!staff) return (\n    <Row {...props} className='staff-card'>\n      <Col span={4}>\n        <Skeleton.Button active={loading} className='skeleton-stretch'/>\n      </Col>\n      <Col span={20} className='staff-card-info-container p-2'>\n        <Skeleton active={loading} paragraph={{rows: 1}}/>\n      </Col>\n    </Row>\n  );\n\n  return (\n    <Row {...props} className='staff-card'>\n      <Col span={4}>\n        <img src={staff.image_url} alt='' className='staff-card-image'/>\n      </Col>\n      <Col span={20} className='staff-card-info-container p-2'>\n        <Paragraph ellipsis={{rows: 1}}>\n          <Link strong onClick={() => window.open(staff.url)}>{staff.name}</Link>\n        </Paragraph>\n        <Text className='typography-block'>{staff.positions.join(', ')}</Text>\n      </Col>\n    </Row>\n  );\n}\n\nexport default StaffCard;","import { Typography, Row, Col, Divider, Skeleton} from 'antd';\n\nimport { StoryCard } from 'components'\nimport { News } from 'interfaces/news'\nimport './style.less';\n\nconst { Title, Link } = Typography;\n\ntype StoryCardsSectionProps = {\n  stories: News[];\n  loading?: boolean;\n}\n\nconst StoryCardsSection = ({\n  stories,\n  loading\n}: StoryCardsSectionProps) => {\n  return (\n    <div className='mb-5'>\n      {/*<Row gutter={{xs: 0, md: 32}} align='middle' className='mb-3'>\n        <Col>\n          <Title level={3}>Anime & Manga News</Title>\n        </Col>\n        <Col flex='auto' className='desktop'>\n          <Divider/>\n        </Col>\n        <Col className='desktop'>\n          <Link strong>VIEW MORE</Link>\n        </Col>\n      </Row>\n      <Row gutter={[{ md: 24, xl: 40 }, { xs: 8, sm: 8, md: 24, xl: 40 }]}>\n        {loading\n        ? Array.from(Array(4).keys()).map(i => (\n          <Col key={i} xs={24} lg={12}>\n            <Row className='story-card loading'>\n              <Col xs={8} md={12}>\n                <Skeleton.Button active className='skeleton-stretch' />\n              </Col>\n              <Col xs={16} md={12} className='p-2'>\n                <Skeleton active/>\n              </Col>\n            </Row>\n          </Col>\n          ))\n        : stories.map((story, i) => (\n            <Col key={i} xs={24} lg={12}>\n              <StoryCard\n                onClick={() => window.open(story.link, '_blank')}\n                story={story}\n              />\n            </Col>\n          )) }\n      </Row>\n      <Row justify='end' className='mobile mt-2'>\n        <Col>\n          <Link strong>VIEW MORE</Link>\n        </Col>\n      </Row>*/}\n    </div>\n  );\n}\n\nexport default StoryCardsSection;","import { HTMLAttributes } from 'react';\nimport { Row, Col, Typography, Skeleton } from 'antd';\nimport { FaComment } from 'react-icons/fa'\nimport moment from 'moment'\n\nimport { windowSizes } from 'consts'\nimport { useWindowSize } from 'hooks'\nimport { News } from 'interfaces/news'\nimport './style.less';\nimport { Topic } from 'interfaces/anime';\n\nconst { Title, Link, Text } = Typography;\n\ninterface TopicCardProps extends HTMLAttributes<HTMLDivElement> {\n  topic?: Topic\n  loading?: boolean\n}\n\nconst TopicCard = ({\n  topic,\n  loading,\n  ...props\n}: TopicCardProps) => {\n  const { width } = useWindowSize();\n\n  if(!topic) return (\n    <div {...props}>\n      <Row gutter={16} justify='space-between' className='topic-card p-2'>\n        <Skeleton active={loading} paragraph={{rows: 0}}/>\n      </Row>\n    </div>\n  )\n\n  const { title, url, author_name, author_url, date_posted, replies, last_post } = topic;\n\n  return (\n    <div {...props}>\n      <div className='topic-card p-2'>\n        <Row wrap={false} justify='space-between'>\n          <Col className='mr-2'>\n            <Title level={5} className='mb-1'><Link onClick={() => window.open(url, '_blank')}>{title}</Link></Title>\n            <Link onClick={() => window.open(author_url, '_blank')}>{author_name}</Link><Text> - {moment(date_posted).format('MMM DD, YYYY')}</Text>\n          </Col>\n          <Col className='desktop'>\n            <Row justify='end'>\n              <Col>\n                <Text className='typography-fade'><FaComment/> {replies}</Text>\n              </Col>\n            </Row>\n            <Text className='typography-fade'>{moment(last_post.date_posted).fromNow()}</Text>\n          </Col>\n        </Row>\n        <div className='mobile mt-1'>\n          <Row align='middle' justify='end'>\n            <Col>\n              <Text className='typography-fade'><FaComment/> {replies}</Text>\n              <Text className='typography-fade'>{moment(last_post.date_posted).fromNow()}</Text>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TopicCard;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Typography, Spin, Table, Menu, Select, Avatar, Tag } from 'antd'\nimport { AiOutlinePlus, AiOutlineHeart, AiFillStar } from 'react-icons/ai'\nimport { FaArrowAltCircleUp, FaArrowAltCircleDown } from 'react-icons/fa'\n\nimport {\n  CharacterCard\n} from 'components'\nimport {\n  selectCharactersAndStaff,\n  getCharactersAndStaff\n} from 'store/anime'\nimport {\n  Character,\n  Reference\n} from 'interfaces/anime'\nimport './style.less'\nimport { useWindowSize } from 'hooks'\nimport { windowSizes } from 'consts'\n\nconst Characters = () => {\n  const dispatch = useDispatch()\n  const { width } = useWindowSize()\n\n  const charactersAndStaff = useSelector(selectCharactersAndStaff)\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n  const [filteredCharacters, setFilteredCharacters] = useState<Character[]>([])\n  const characters = charactersAndStaff.data?.characters\n\n  useEffect(() => {\n    dispatch(getCharactersAndStaff(\"1\"))\n  }, [dispatch])\n\n  useEffect(() => {\n    if(characters) {\n      setFilteredCharacters(\n        characters.map(character => ({\n          ...character,\n          voice_actors: character.voice_actors.filter(voiceActor => voiceActor.language === 'Japanese')\n        }))\n      )\n    }\n  }, [characters])\n\n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={totalShowedCharacters < filteredCharacters.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(totalShowedCharacters + 12 <= filteredCharacters.length ? totalShowedCharacters + 12 : filteredCharacters.length)\n        }, 500)}\n        threshold={50}\n      >\n        <Row gutter={32}>\n          {charactersAndStaff.data && charactersAndStaff.data.characters.length > 0 && !charactersAndStaff.loading\n          ? filteredCharacters.slice(0, totalShowedCharacters).map((character, i) => (\n            <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <CharacterCard character={character}/>\n            </Col>\n          ))\n          : Array.from(Array(4).keys()).map((i) => (\n            <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <CharacterCard loading={charactersAndStaff.loading}/>\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default Characters;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Typography, Spin, Table, Menu, Select, Avatar, Tag } from 'antd'\nimport { AiOutlinePlus, AiOutlineHeart, AiFillStar } from 'react-icons/ai'\nimport { FaArrowAltCircleUp, FaArrowAltCircleDown } from 'react-icons/fa'\n\nimport {\n  TopicCard\n} from 'components'\nimport {\n  selectTopics,\n  getTopics\n} from 'store/anime'\nimport {\n  Reference\n} from 'interfaces/anime'\nimport './style.less'\nimport { checker } from 'helpers'\n\nconst Forums = () => {\n\n  const topics = useSelector(selectTopics)\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n\n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={totalShowedCharacters < topics.data.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(totalShowedCharacters + 12 <= topics.data.length ? totalShowedCharacters + 12 : topics.data.length)\n        }, 500)}\n        threshold={50}\n      >\n        {checker.isFetched(topics)\n        ? topics.data.slice(0, totalShowedCharacters).map(topic => (\n            <TopicCard topic={topic} className='mb-4 sm-mb-2'/>\n        ))\n        : Array.from(Array(3).keys()).map((i) => (\n            <TopicCard loading={topics.loading} className='mb-4 sm-mb-2'/>\n        ))}\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default Forums;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Typography, Spin, Table, Menu, Select, Avatar, Tag } from 'antd'\nimport { AiOutlinePlus, AiOutlineHeart, AiFillStar } from 'react-icons/ai'\nimport { FaArrowAltCircleUp, FaArrowAltCircleDown } from 'react-icons/fa'\n\nimport {\n  ArticleCard\n} from 'components'\nimport {\n  selectArticles,\n  getArticles\n} from 'store/anime'\nimport {\n  Reference\n} from 'interfaces/anime'\nimport './style.less'\nimport { checker } from 'helpers'\nimport { windowSizes } from 'consts'\nimport { useWindowSize } from 'hooks'\n\nconst News = () => {\n  const articles = useSelector(selectArticles)\n  const { width } = useWindowSize()\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n\n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={totalShowedCharacters < articles.data.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(totalShowedCharacters + 12 <= articles.data.length ? totalShowedCharacters + 12 : articles.data.length)\n        }, 500)}\n        threshold={50}\n      >\n        <Row gutter={32}>\n          {checker.isFetched(articles)\n          ? articles.data.slice(0, 4).map(article => (\n            <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <ArticleCard article={article} />\n            </Col>\n          ))\n          : Array.from(Array(4).keys()).map((i) => (\n            <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <ArticleCard loading={articles.loading}/>\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default News;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Typography, Spin, Table, Menu, Select, Avatar, Tag, Divider } from 'antd'\n\nimport {\n  CharacterCard,\n  StaffCard,\n  ReviewCard,\n  ArticleCard,\n  TopicCard,\n  AnimeCard\n} from 'components'\nimport {\n  selectArticles,\n  selectCharactersAndStaff,\n  selectRecommendations,\n  selectReviews,\n  selectTopics\n} from 'store/anime'\nimport {\n  Character\n} from 'interfaces/anime'\nimport { checker } from 'helpers'\nimport './style.less'\nimport { useWindowSize } from 'hooks'\nimport { windowSizes } from 'consts'\n\nconst { Title, Text, Paragraph, Link } = Typography\nconst { Option } = Select\n\nconst Characters = () => {\n  const history = useHistory()\n  const { width } = useWindowSize()\n\n  const charactersAndStaff = useSelector(selectCharactersAndStaff)\n  const characters = charactersAndStaff.data?.characters\n  const staffList = charactersAndStaff.data?.staffList\n  const reviews = useSelector(selectReviews)\n  const articles = useSelector(selectArticles)\n  const topics = useSelector(selectTopics)\n  const recommendations = useSelector(selectRecommendations)\n\n  const [filteredCharacters, setFilteredCharacters] = useState<Character[]>([])\n\n  useEffect(() => {\n    if(characters) {\n      setFilteredCharacters(\n        characters.map(character => ({\n          ...character,\n          voice_actors: character.voice_actors.filter(voiceActor => voiceActor.language === 'Japanese')\n        }))\n      )\n    }\n  }, [characters])\n\n  const renderTitle = (type: string) => (\n    <Row gutter={32} align='middle' className='mb-3'>\n      <Col>\n        <Title level={3}>{type.toUpperCase()}</Title>\n      </Col>\n      <Col flex='auto'>\n        <Divider/>\n      </Col>\n      <Col>\n        <Link onClick={() => history.push(`/anime/1/${type}`)} strong>VIEW MORE</Link>\n      </Col>\n    </Row>\n  )\n\n  return (\n    <div>\n      {renderTitle('characters')}\n      <Row gutter={32} className='mb-5'>\n        {charactersAndStaff.data && charactersAndStaff.data.characters.length > 0 && !charactersAndStaff.loading\n        ? filteredCharacters.slice(0, 4).map((character, i) => (\n          <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <CharacterCard character={character}/>\n          </Col>\n        ))\n        : Array.from(Array(4).keys()).map((i) => (\n          <Col key={i} span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <CharacterCard loading={charactersAndStaff.loading}/>\n          </Col>\n        ))}\n      </Row>\n      {renderTitle('staff')}\n      <Row gutter={32} className='mb-5'>\n        {charactersAndStaff.data && charactersAndStaff.data.characters.length > 0 && !charactersAndStaff.loading\n        ? staffList?.slice(0, 4).map(staff => (\n          <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <StaffCard staff={staff}/>\n          </Col>\n        ))\n        : Array.from(Array(4).keys()).map((i) => (\n          <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <StaffCard loading={charactersAndStaff.loading}/>\n          </Col>\n        ))}\n      </Row>\n      {renderTitle('reviews')}\n      <div className='mb-5'>\n        {checker.isFetched(reviews)\n        ? reviews.data.slice(0, 2).map(review => (\n          <div className='mb-4 sm-mb-2'>\n            <ReviewCard review={review}/>\n          </div>\n        ))\n        : Array.from(Array(2).keys()).map((i) => (\n          <div className='mb-4 sm-mb-2'>\n            <ReviewCard loading={reviews.loading}/>\n          </div>\n        ))}\n      </div>\n      {renderTitle('news')}\n      <Row gutter={32} className='mb-5'>\n        {checker.isFetched(articles)\n        ? articles.data.slice(0, 4).map(article => (\n          <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <ArticleCard article={article} />\n          </Col>\n        ))\n        : Array.from(Array(4).keys()).map((i) => (\n          <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n            <ArticleCard loading={articles.loading}/>\n          </Col>\n        ))}\n      </Row>\n      {renderTitle('forums')}\n      <div className='mb-5'>\n        {checker.isFetched(topics)\n        ? topics.data.slice(0, 3).map(topic => (\n            <TopicCard topic={topic} className='mb-4 sm-mb-2'/>\n        ))\n        : Array.from(Array(3).keys()).map((i) => (\n            <TopicCard loading={topics.loading} className='mb-4 sm-mb-2'/>\n        ))}\n      </div>\n      {renderTitle('recommendations')}\n      <Row gutter={{xs: 8, sm: 8, md: 32}} className='mb-5'>\n        {checker.isFetched(recommendations)\n        ? recommendations.data.slice(0, 6).map(recommendation => (\n          <Col span={width <= windowSizes.sm.max ? 8 : width <= windowSizes.md.max ? 6 : 4} className='mb-2'>\n            <AnimeCard recommendation={recommendation} />\n          </Col>\n        ))\n        : Array.from(Array(6).keys()).map((i) => (\n          <Col span={width <= windowSizes.sm.max ? 8 : width <= windowSizes.md.max ? 6 : 4} className='mb-2'>\n            <AnimeCard loading={recommendations.loading} />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  ) \n}\n\nexport default Characters;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Typography, Spin, Table, Menu, Select, Avatar, Tag } from 'antd'\nimport { AiOutlinePlus, AiOutlineHeart, AiFillStar } from 'react-icons/ai'\nimport { FaArrowAltCircleUp, FaArrowAltCircleDown } from 'react-icons/fa'\n\nimport {\n  AnimeCard,\n  TopicCard\n} from 'components'\nimport {\n  selectRecommendations,\n  getRecommendations\n} from 'store/anime'\nimport {\n  Anime,\n  Recommendation,\n  Reference\n} from 'interfaces/anime'\nimport './style.less'\nimport { useWindowSize } from 'hooks'\nimport { checker } from 'helpers'\nimport { windowSizes } from 'consts'\n\nconst Recommendations = () => {\n  const dispatch = useDispatch()\n  const { width } = useWindowSize()\n\n  const recommendations = useSelector(selectRecommendations)\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n\n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={totalShowedCharacters < recommendations.data.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(totalShowedCharacters + 12 <= recommendations.data.length ? totalShowedCharacters + 12 : recommendations.data.length)\n        }, 500)}\n        threshold={50}\n      >\n        <Row gutter={{xs: 8, sm: 8, md: 32}} className='mb-5'>\n          {checker.isFetched(recommendations)\n          ? recommendations.data.slice(0, totalShowedCharacters).map(recommendation => (\n            <Col span={width <= windowSizes.sm.max ? 8 : width <= windowSizes.md.max ? 6 : 4} className='mb-2'>\n              <AnimeCard recommendation={recommendation} />\n            </Col>\n          ))\n          : Array.from(Array(6).keys()).map((i) => (\n            <Col span={width <= windowSizes.sm.max ? 8 : width <= windowSizes.md.max ? 6 : 4} className='mb-2'>\n              <AnimeCard loading={recommendations.loading} />\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default Recommendations;","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Row, Col, Typography, Button, Select, Avatar, Tag } from 'antd'\nimport { AiFillStar } from 'react-icons/ai'\nimport { ImArrowUp, ImArrowDown } from 'react-icons/im'\nimport moment from 'moment'\n\nimport {\n  selectAnime,\n  selectReviews\n} from 'store/anime'\nimport {\n  ReviewCard\n} from 'components'\nimport {\n  checker,\n  formatter\n} from 'helpers'\nimport './style.less'\n\nconst { Title, Text, Paragraph, Link } = Typography\nconst { Option } = Select\n\nconst Reviews = () => {\n  const reviews = useSelector(selectReviews)\n\n  return (\n    <div>\n      <Row gutter={16} justify='end' className='mb-2'>\n        <Col>\n          <Row gutter={8} align='middle'>\n            <Col>\n              <Text>Sort by:</Text>\n            </Col>\n            <Col>\n              <Select defaultValue=\"Recent\">\n                <Option value=\"Recent\">Recent</Option>\n              </Select>\n            </Col>\n          </Row>\n        </Col>\n        <Col>\n          <Button type='default'>WRITE REVIEW</Button>\n        </Col>\n      </Row>\n      {checker.isFetched(reviews)\n        ? reviews.data.slice(0, 2).map(review => (\n          <div className='mb-4 sm-mb-2'>\n            <ReviewCard review={review}/>\n          </div>\n        ))\n        : Array.from(Array(2).keys()).map((i) => (\n          <div className='mb-4 sm-mb-2'>\n            <ReviewCard loading={reviews.loading}/>\n          </div>\n        ))}\n    </div>\n  ) \n}\n\nexport default Reviews;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Row, Col, Typography, Spin, Table, Menu, Select, Avatar, Tag } from 'antd'\nimport { AiOutlinePlus, AiOutlineHeart, AiFillStar } from 'react-icons/ai'\nimport { FaArrowAltCircleUp, FaArrowAltCircleDown } from 'react-icons/fa'\n\nimport {\n  StaffCard\n} from 'components'\nimport {\n  selectCharactersAndStaff,\n  getCharactersAndStaff\n} from 'store/anime'\nimport {\n  Reference\n} from 'interfaces/anime'\nimport './style.less'\nimport { windowSizes } from 'consts'\nimport { useWindowSize } from 'hooks'\n\nconst { Title, Text, Paragraph, Link } = Typography\nconst { Option } = Select\n\nconst Staff = () => {\n  const dispatch = useDispatch()\n  const { width } = useWindowSize()\n\n  const charactersAndStaff = useSelector(selectCharactersAndStaff)\n\n  const [totalShowedCharacters, setTotalShowedCharacters] = useState(12)\n\n  const staffList = charactersAndStaff.data?.staffList\n  \n  return (\n    <div>\n      <InfiniteScroll\n        hasMore={staffList && totalShowedCharacters < staffList.length}\n        loader={<div className='centered-flex'>\n          <Spin />\n        </div>}\n        loadMore={() => setTimeout(() => {\n          setTotalShowedCharacters(staffList ? totalShowedCharacters + 12 <= staffList.length ? totalShowedCharacters + 12 : staffList.length : 0)\n        }, 500)}\n        threshold={50}\n      >\n        <Row gutter={32}>\n          {charactersAndStaff.data && charactersAndStaff.data.characters.length > 0 && !charactersAndStaff.loading\n          ? staffList?.slice(0, totalShowedCharacters).map(staff => (\n            <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <StaffCard staff={staff}/>\n            </Col>\n          ))\n          : Array.from(Array(4).keys()).map((i) => (\n            <Col span={width <= windowSizes.md.max ? 24 : 12} className='mb-4 sm-mb-2'>\n              <StaffCard loading={charactersAndStaff.loading}/>\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  ) \n}\n\nexport default Staff;","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Switch, Route, useHistory, useParams } from 'react-router-dom'\nimport { Row, Col, Typography, Button, Table, Menu, Select, Avatar, Tag, Skeleton } from 'antd'\nimport { AiOutlinePlus, AiOutlineHeart, AiFillStar } from 'react-icons/ai'\nimport { FaArrowAltCircleUp, FaArrowAltCircleDown, FaUser, FaUserCheck, FaTrophy, FaHeart, FaStar } from 'react-icons/fa'\n\nimport anime, {\n  selectAnime,\n  getAnime,\n  getCharactersAndStaff,\n  getReviews,\n  getArticles,\n  getTopics,\n  getRecommendations\n} from 'store/anime'\nimport {\n  Reference\n} from 'interfaces/anime'\nimport {\n  Overview,\n  Characters,\n  Staff,\n  Reviews,\n  News,\n  Forums,\n  Recommendations\n} from './views'\nimport './style.less'\nimport { useWindowSize } from 'hooks'\nimport { formatter } from 'helpers'\n\nconst { Title, Text, Paragraph, Link } = Typography\nconst { Option } = Select\n\nconst infoColumnKeys = [\n  'type',\n  'episodes',\n  'status',\n  'aired',\n  'premiered',\n  'broadcast',\n  'producers',\n  'licensors',\n  'studios',\n  'source',\n  'genres',\n  'duration',\n  'rating'\n]\n\nconst Anime = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const {id, menu} = useParams<{id: string, menu: string}>()\n\n  const anime = useSelector(selectAnime)\n\n  const infoColumns = infoColumnKeys.map(key => (\n    {\n      title: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n      dataIndex: key,\n      key,\n    }\n  ));\n\n  useEffect(() => {\n    dispatch(getAnime(id))\n    dispatch(getCharactersAndStaff(id))\n    dispatch(getReviews(id))\n    dispatch(getArticles(id))\n    dispatch(getTopics(id))\n    dispatch(getRecommendations(id))\n  }, [dispatch, id])\n  useEffect(() => {\n    console.log(anime)\n  }, [anime])\n\n  const generateReferenceText = (references: Reference[]) => (<>\n    {references.map((reference, i) => (\n      <>\n      <Link onClick={() => window.open(reference.url, '_blank')}>\n        {reference.name}\n      </Link>\n      {i < references.length - 1 && ', '}\n      </>\n    ))}\n  </>)\n\n  // convert anime object to table dataSource format\n  const getAnimeInfoDataSource = () => {\n    if(!anime?.data) return {}\n    const { aired, producers, licensors, studios, genres } = anime.data\n    return {\n      ...anime.data,\n      aired: aired.string,\n      producers: generateReferenceText(producers),\n      licensors: generateReferenceText(licensors),\n      studios: generateReferenceText(studios),\n      genres: generateReferenceText(genres)\n    }\n  }\n\n  const renderAnimeTitle = () => (\n    anime.loading ? (\n      <>\n        <Skeleton.Button active className='anime-title-skeleton mb-1'/>\n        <Skeleton.Button active className='anime-subtitle-skeleton'/>\n      </>\n    ) : (\n      <>\n        <Title type='secondary' ellipsis={{rows: 1, tooltip: true}} className='mb-1'>\n          {anime.data?.title}\n        </Title>\n        <Paragraph type='secondary' ellipsis={{rows: 1, tooltip: true}} className='typography-h4'>\n          {anime.data?.title_english}\n        </Paragraph>\n      </>\n    )\n  )\n\n  const renderActionButtons = () => (\n    <Row wrap={false} gutter={{xs: 8, md: 16}}>\n      <Col>\n        <Button ghost shape='circle' className='button-ghost-warning'>\n          <AiOutlinePlus/>\n        </Button>\n      </Col>\n      <Col>\n        <Button ghost shape='circle' className='button-ghost-error'>\n          <AiOutlineHeart/>\n        </Button>\n      </Col>\n    </Row>\n  )\n\n  return (\n    <div>\n      <div className='anime-banner-image-container'>\n        <div className='anime-banner-image-text-container content-container py-4'>\n          <Row gutter={16} wrap={false} className='mt-4 mobile'>\n            <Col>\n              {anime.loading\n              ? <Skeleton.Button active className='anime-banner-info-image-skeleton'/>\n              : <img src={anime.data?.image_url} alt='' className='anime-banner-info-image'/>\n              }\n            </Col>\n            <Col>\n              <Row justify='space-between' className='row-vertical anime-banner-info-image-detail-container'>\n                <Col>\n                  {renderAnimeTitle()}\n                </Col>\n                <Col>\n                  {renderActionButtons()}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row wrap={false} className='desktop'>\n            <Col flex='282px'/>\n            <Col flex='auto'>\n              <Row gutter={32} wrap={false} align='bottom' justify='space-between'>\n                <Col>\n                  {renderAnimeTitle()}\n                </Col>\n                <Col>\n                  {renderActionButtons()}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </div>\n        <img src={anime.data?.image_url} alt='' className='anime-banner-image'/>\n      </div>\n      <div className='anime-banner-info-container py-4'>\n        <div className='content-container'>\n          <Row wrap={false} className='mb-5'>\n            <Col flex='282px' className='desktop'>\n              {anime.loading\n              ? <Skeleton.Button active className='anime-banner-info-image-skeleton'/>\n              : <img src={anime.data?.image_url} alt='' className='anime-banner-info-image'/>\n              }\n            </Col>\n            <Col flex='auto'>\n              <Row justify='space-between' className='mb-2'>\n                <Col>\n                  <Title level={4} className='desktop'>Synopsis</Title>\n                  <Tag color='warning' className='mobile'><Title><FaStar/> {anime.data?.score}</Title></Tag>\n                </Col>\n                {!anime.loading && (\n                  <Col>\n                    <Row gutter={16}>\n                      <Col>\n                        <Text strong><FaTrophy className='color-warning'/> #{anime.data?.rank}</Text>\n                      </Col>\n                      <Col>\n                        <Text strong><FaHeart className='color-error'/> #{anime.data?.popularity}</Text>\n                      </Col>\n                      <Col>\n                        <Text strong><FaUser className='color-success'/> {anime.data?.members.toLocaleString()}</Text>\n                      </Col>\n                    </Row>\n                  </Col>\n                )}\n              </Row>\n              <Title level={4} className='mobile mb-1'>Synopsis</Title>\n              {anime.loading\n              ? <Skeleton active paragraph={{rows: 1}}/>\n              : <Paragraph ellipsis={{rows: 4, expandable: true, symbol: 'More'}} className='anime-banner-info-synopsis'>\n                  {anime.data?.synopsis}\n                </Paragraph>\n              }\n            </Col>\n          </Row>\n          <Row gutter={24} wrap={false}>\n            <Col className='desktop'>\n              <div className='anime-banner-info-score-container centered-flex py-1 px-2'>\n                <Row align='middle' className='row-vertical'>\n                  <Col >\n                    <Text strong>SCORE</Text>\n                  </Col>\n                  <Col>\n                    <FaStar className='mobile'/> <Text strong className='anime-banner-info-score'>{anime.data?.score}</Text>\n                  </Col>\n                  <Col >\n                    <Text>{anime.data?.scored_by.toLocaleString()} <FaUserCheck/></Text>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col flex='auto'>\n              <Table loading={anime.loading} dataSource={[getAnimeInfoDataSource()]} columns={infoColumns} pagination={false} className='anime-banner-info-table overflow-scroll' />\n            </Col>\n          </Row>\n        </div>\n      </div>\n      <div className='centered-flex pt-4 pb-5'>\n        <div className='content-container'>\n          <Menu mode='horizontal' selectedKeys={[menu || 'overview']} className='anime-menu mb-5' >\n            <Menu.Item key='overview' onClick={() => history.push(`/anime/${id}`)}>OVERVIEW</Menu.Item>\n            <Menu.Item key='characters' onClick={() => history.push(`/anime/${id}/characters`)}>CHARACTERS</Menu.Item>\n            <Menu.Item key='staff' onClick={() => history.push(`/anime/${id}/staff`)}>STAFF</Menu.Item>\n            <Menu.Item key='reviews' onClick={() => history.push(`/anime/${id}/reviews`)}>REVIEWS</Menu.Item>\n            <Menu.Item key='news' onClick={() => history.push(`/anime/${id}/news`)}>NEWS</Menu.Item>\n            <Menu.Item key='forums' onClick={() => history.push(`/anime/${id}/forums`)}>FORUMS</Menu.Item>\n            <Menu.Item key='recommendations' onClick={() => history.push(`/anime/${id}/recommendations`)}>RECOMMENDATIONS</Menu.Item>\n          </Menu>\n          <Switch>\n            <Route exact path='/anime/:id'>\n              <Overview/>\n            </Route>\n            <Route exact path='/anime/:id/characters'>\n              <Characters/>\n            </Route>\n            <Route exact path='/anime/:id/staff'>\n              <Staff/>\n            </Route>\n            <Route exact path='/anime/:id/reviews'>\n              <Reviews/>\n            </Route>\n            <Route exact path='/anime/:id/news'>\n              <News/>\n            </Route>\n            <Route exact path='/anime/:id/forums'>\n              <Forums/>\n            </Route>\n            <Route exact path='/anime/:id/recommendations'>\n              <Recommendations/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  ) \n}\n\nexport default Anime;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router';\nimport { Row, Col, Form, Input,  Skeleton, Typography, Pagination, Button, Select, Slider, Tag, DatePicker } from 'antd';\nimport moment from 'moment'\n\nimport {\n  BannerCarousel,\n  Carousel,\n  AnimeCardsSection,\n  StoryCardsSection,\n  AnimeCard\n} from 'components';\nimport './style.less';\nimport {\n  selectFeaturedNewsList,\n  getFeaturedNewsList\n} from 'store/news'\nimport {\n  selectAnimes,\n  selectTopAiringAnimes,\n  getCurrentSeason,\n  getTopAiringAnimes,\n  getAnimes\n} from 'store/anime'\nimport { useWindowSize } from 'hooks';\nimport { options, windowSizes } from 'consts';\nimport { checker, formatter } from 'helpers';\nimport { FaSearch, FaSortAmountUp, FaStar, FaStarAndCrescent } from 'react-icons/fa';\n\nconst { Title, Link } = Typography\nconst { Option } = Select\n\nconst Home = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const dispatch = useDispatch()\n  const { width } = useWindowSize()\n  const [form] = Form.useForm()\n\n  const animes = useSelector(selectAnimes)\n  const [page, setPage] = useState(0)\n\n  //convert query to jikan api query format\n  const getApiQuery = () => {\n    const params = new URLSearchParams(history.location.search)\n    let queryObj: any = {}\n    if(params.get('search')) queryObj.q = params.get('search')\n    if(params.get('sort')) queryObj.order_by = params.get('sort')\n    if(params.get('page')) queryObj.page = params.get('page')\n    if(params.get('genre')) queryObj.genre = params.get('genre')\n    if(params.get('format')) queryObj.type = params.get('format')\n    if(params.get('score')) queryObj.score = params.get('score')\n    if(params.get('year')) {\n      queryObj.start_date = `${params.get('year')}-01-01`\n      queryObj.end_date = `${params.get('year')}-12-31`\n    }\n    return formatter.objectToQuery(queryObj)\n  }\n\n  useEffect(() => {\n    const params = new URLSearchParams(history.location.search)\n    // set form fields initial value from url search params\n    form.setFieldsValue({\n      search: params.get('search') || '', //@ts-ignore\n      genre: params.get('genre')?.split(',').map(genreValue => options.revGenres[genreValue]) || [], //@ts-ignore\n      type: params.get('format')?.split(',').map(formatValue => options.revFormats[formatValue]) || [],\n      score: params.get('score')?.split(',') || [0, 10], //@ts-ignore\n      sort: options.revSorts[params.get('sort')]\n    })\n    if(params.get('page'))  setPage(Number(params.get('page')))\n    dispatch(getAnimes(getApiQuery()))\n    return history.listen(() => {\n      dispatch(getAnimes(getApiQuery()))\n    })\n  }, [history, dispatch, form])\n\n\n  const handleChangePagination = (page: number) => {\n    setPage(page)\n    submitForm(page)\n  }\n\n  const submitForm = (newPage?: number) => {\n    let values = form.getFieldsValue()\n    values.page = newPage || 1\n\n    if(values.genre) { //@ts-ignore convert genre from label to value\n      values.genre = values.genre.map((genreLabel) => options.genres[genreLabel]) \n    }\n\n    if(values.format) { //@ts-ignore convert format from label to value\n      values.format = values.format.map((formatLabel) => options.formats[formatLabel]) \n    }\n\n    if(values.sort) { //@ts-ignore convert sort from label to value\n      values.sort = options.sorts[values.sort]\n    }\n\n    // clear values with default value\n    if(values.page === 1) delete values.page\n    if(values.score.join(',') === '0,10') delete values.score\n    if(values.year) {\n      values.year = moment(values.year).format('yyyy')\n    }\n\n    history.push(`/animes?${formatter.objectToQuery(values)}`)\n  }\n\n  const handleValuesChangeForm = (changedValues: any) => {\n    if(!changedValues.search) { // prevent search change to submit form\n      submitForm()\n    }\n  }\n\n  return (\n    <div>\n      <div className='navbar-padding'/>\n      <div className='centered-flex'>\n        <div className='content-container py-5'>\n          <Form form={form} onValuesChange={handleValuesChangeForm} onFinish={() => submitForm()} className='mb-4'>\n            <Row gutter={40} className='mb-1' justify='space-between'>\n              <Col span={5}>\n                <Title level={5} className='mb-1'>Search</Title>\n                <Form.Item\n                  name='search'\n                  className='mb-2'\n                >\n                  <Input suffix={<FaSearch onClick={() => submitForm()} className='clickable'/>} />\n                </Form.Item>\n              </Col>\n              <Col>\n                <Title level={5} className='mb-1'>Sort By</Title>\n                <Row align='middle' gutter={16}>\n                  <Col>\n                    <Form.Item\n                      name='sort'\n                    >\n                      <Select \n                        allowClear\n                      >\n                        {Object.entries(options.sorts).map((sort, i) => (\n                          <Option key={i} value={sort[0]}>{sort[0]}</Option>\n                        ))}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col>\n                    <FaSortAmountUp/>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row wrap={false} gutter={40}>\n              <Col span={5}>                \n                  <Title level={5} className='mb-1'>Genres</Title>\n                  <Form.Item\n                    name='genre'\n                    className='mb-2'\n                  >\n                    <Select\n                      allowClear\n                      mode='multiple'\n                    >\n                      {Object.entries(options.genres).map((genre, i) => (\n                        <Option key={i} value={genre[0]}>{genre[0]}</Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                  <Title level={5} className='mb-1'>Format</Title>\n                  <Form.Item\n                    name='format'\n                    className='mb-2'\n                  >\n                    <Select\n                      allowClear\n                      mode='multiple'\n                    >\n                      {Object.entries(options.formats).map((format, i) => (\n                        <Option key={i} value={format[0]}>{format[0]}</Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                  <Title level={5} className='mb-1'>Score</Title>\n                  <Form.Item\n                    name='score'\n                    className='mb-2'\n                  >\n                    <Slider range defaultValue={[0, 10]} min={0} max={10}/>\n                  </Form.Item>\n                  <Title level={5} className='mb-1'>Year</Title>\n                  <Form.Item\n                    name='year'\n                  >\n                    <DatePicker picker=\"year\" placeholder='' />\n                  </Form.Item>\n              </Col>\n              <Col flex='auto'>\n                <Row gutter={{xs: 8, sm: 8, md: 24}} className='mb-2'>\n                  {checker.isFetched(animes)\n                  ? animes.data.map(anime => (\n                    <Col style={{width: '20%'}} className='mb-3'>\n                      <AnimeCard anime={anime} />\n                    </Col>\n                  ))\n                  : Array.from(Array(15).keys()).map((i) => (\n                    <Col style={{width: '20%'}} className='mb-5'>\n                      <AnimeCard loading={animes.loading} />\n                    </Col>\n                  ))}\n                </Row>\n                <Row justify='end' className='mb-5'>\n                  <Col>\n                    <Pagination\n                      current={page || 1}\n                      pageSize={animes.pagination.pageSize}\n                      disabled={animes.loading}\n                      showSizeChanger={false}\n                      total={animes.pagination.total}\n                      onChange={handleChangePagination}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;","import { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router';\n\nimport {\n  BannerCarousel,\n  Carousel,\n  AnimeCardsSection,\n  StoryCardsSection,\n  AnimeCard\n} from 'components';\nimport './style.less';\nimport {\n  selectFeaturedNewsList,\n  getFeaturedNewsList\n} from 'store/news'\nimport {\n  selectCurrentSeason,\n  selectTopAiringAnimes,\n  getCurrentSeason,\n  getTopAiringAnimes\n} from 'store/anime'\nimport { Col, Divider, Row, Skeleton, Typography } from 'antd';\nimport { useWindowSize } from 'hooks';\nimport { windowSizes } from 'consts';\n\nconst { Title, Link } = Typography\n\nconst Home = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { width } = useWindowSize()\n\n  const featuredNewsList = useSelector(selectFeaturedNewsList)\n  const currentSeason = useSelector(selectCurrentSeason)\n  const topAiringAnimes = useSelector(selectTopAiringAnimes)\n\n  const [carouselCardColumn, setCarouselCardColumn] = useState(6)\n\n  useEffect(() => {\n    dispatch(getFeaturedNewsList())\n    dispatch(getCurrentSeason())\n    dispatch(getTopAiringAnimes())\n  }, [dispatch])\n\n  useEffect(() => {\n    if(width <= windowSizes.lg.max) {\n      setCarouselCardColumn(4);\n      return\n    }\n    setCarouselCardColumn(6);\n  }, [width])\n\n  return (\n    <div>\n      <BannerCarousel\n        loading={featuredNewsList.loading}\n        newsList={featuredNewsList.data || []}\n      />\n      <div className='centered-flex'>\n        <div className='content-container py-5'>\n          <div className='mb-5'>\n            <Row gutter={{xs: 0, md: 32}} align='middle' className='mb-3'>\n              <Col>\n                <Title level={3}>{currentSeason.data?.season_name} {currentSeason.data?.season_year} Anime</Title>\n              </Col>\n              <Col flex='auto' className='desktop'>\n                <Divider/>\n              </Col>\n              <Col className='desktop'>\n                <Link onClick={() => history.push('/animes')} strong>VIEW MORE</Link>\n              </Col>\n            </Row>\n            {width <= windowSizes.md.max ? (\n              <div className='anime-cards-section-swiper'>\n                {currentSeason.loading\n                ? Array.from(Array(6).keys()).map(i => \n                    <div key={i} className='anime-cards-section-swiper-card-container mr-2'>\n                      <Skeleton.Button key={i} active className='skeleton-anime-card'/>\n                    </div>\n                  )\n                : currentSeason.data?.anime.map((anime, i) => \n                    <div key={i} className='anime-cards-section-swiper-card-container mr-2'>\n                      <AnimeCard\n                        seasonAnime={anime}\n                      />\n                    </div>\n                  )}\n              </div>\n            ) : (\n              <Carousel\n                dots={false}\n                showArrows={!currentSeason.loading}\n                className='anime-cards-section-carousel mb-1'\n              >\n                { Array.from(Array(Math.ceil((currentSeason.loading ? 6 : currentSeason.data?.anime.length || 0) / 6)).keys()).map(i => (\n                  <div key={i}>\n                    <Row gutter={carouselCardColumn * 6} className='anime-cards-section-slide'>\n                      { Array.from(Array(carouselCardColumn).keys()).map(j => (\n                        <Col key={`${i}${j}`} span={24 / carouselCardColumn}>\n                          {currentSeason.loading\n                          ? <Skeleton.Button active key={i} className='skeleton-anime-card'/>\n                          : currentSeason.data?.anime[i * carouselCardColumn + j]\n                          && <AnimeCard\n                              onClick={() => history.push(`/anime/${currentSeason.data?.anime[i * carouselCardColumn + j].mal_id}`)}\n                              seasonAnime={currentSeason.data?.anime[i * carouselCardColumn + j]}\n                            />}\n                        </Col>\n                      )) }\n                    </Row>\n                  </div>\n                )) }\n              </Carousel>\n            )}\n            <Row justify='end' className='mobile mt-2'>\n              <Col>\n                <Link onClick={() => history.push('/animes')} strong>VIEW MORE</Link>\n              </Col>\n            </Row>\n          </div>\n          <StoryCardsSection\n            loading={featuredNewsList.loading}\n            stories={featuredNewsList.data || []}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;","import { useHistory } from 'react-router-dom'\nimport { Form, Input, Button, Typography, Row, Col, Divider, DatePicker, Checkbox } from 'antd'\nimport { AiOutlineUser, AiOutlineHeart, AiFillStar } from 'react-icons/ai'\nimport { FaArrowLeft, FaArrowAltCircleDown } from 'react-icons/fa'\n\nimport { registerIllustration } from 'assets/images'\nimport { validator } from 'helpers'\nimport './style.less'\n\nconst { Text, Title, Link } = Typography\n\nconst Register = () => {\n  const history = useHistory()\n\n  const [registerForm] = Form.useForm()\n\n  return (\n    <Row wrap={false}>\n      <Col flex='480px' className='register-form-container p-5 sm-px-3'>\n        <Row justify='space-between' className='row-vertical register-form-content-container'>\n          <Col>\n            <Row gutter={24} align='middle' className='mb-5'>\n              <Col>\n                <Title>SIGN UP</Title>\n              </Col>\n              <Col flex='auto'>\n                <Divider/>\n              </Col>\n            </Row>\n            <Form form={registerForm} onFinish={values => alert(JSON.stringify(values))} validateTrigger='onSubmit'>\n              <Form.Item\n                name='email'\n                rules={[{validator: validator.email}]}\n                className='mb-2'\n              >\n                <Input size='large' placeholder='Email' />\n              </Form.Item>\n              <Form.Item\n                name='username'\n                help='(Between 2 and 16 characters)'\n                className='mb-2'\n              >\n                <Input size='large' placeholder='Username' />\n              </Form.Item>\n              <Form.Item\n                name='password'\n                rules={[{validator: validator.password}]}\n                className='mb-2'\n              >\n                <Input.Password size='large' placeholder='Password' />\n              </Form.Item>\n              <Form.Item\n                name='birthday'\n                help='Your birthday won’t be shown publicly by default.'\n                className='mb-2'\n              >\n                <DatePicker size='large' placeholder='Birthday'/>\n              </Form.Item>\n              <Form.Item\n                name='agree'\n                className='mb-4'\n              >\n                <Checkbox>\n                  <Text className='typography-small'>I have read and agree to the <Link strong>Term of Service</Link> and <Link strong>Privacy Policy</Link></Text>\n                </Checkbox>\n              </Form.Item>\n              <Row justify='end' className='mb-2'>\n                <Col>\n                  <Form.Item>\n                    <Button\n                      type='primary'\n                      size='large'\n                      htmlType='submit'\n                    >\n                      CREATE ACCOUNT\n                    </Button>\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row justify='end' className='mb-4'>\n                <Col>\n                  <Text className='typography-fade'>Already have an account? </Text><Link strong onClick={() => history.push('/register')}>Login</Link>\n                </Col>\n              </Row>\n            </Form>\n          </Col>\n          <Col>\n            <Link onClick={() => history.goBack()}><FaArrowLeft size={20}/></Link>\n          </Col>\n        </Row>\n      </Col>\n      <Col flex='auto' className='register-banner-container'>\n        <div className='p-5'>\n          <Title type='secondary' className='mb-5 register-banner-title'>Start Using MyAnimeList</Title>\n          <Title level={5} type='secondary' className='register-banner-description'>Join MAL to catalog your anime and manga,</Title>\n          <Title level={5} type='secondary' className='register-banner-description'>compare with your friends, create your own profile, and plenty more.</Title>\n          <Title level={5} type='secondary' className='register-banner-description'>It's FREE.</Title>\n        </div>\n        <img src={registerIllustration} alt='' className='register-illustration'/>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Register;","import { useState, useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n  useHistory\n} from 'react-router-dom';\n\nimport {\n  Home,\n  Anime,\n  Register,\n  Animes\n} from 'views'\nimport {\n  Navbar,\n  Footer\n} from 'components'\nimport './App.less';\n\nconst App = () => {\n  const history = useHistory()\n\n  const [showNavbar, setShowNavbar] = useState(false)\n  const [showFooter, setShowFooter] = useState(false)\n\n  useEffect(() => {\n    setShowNavbar(history.location.pathname === '/' ||\n    history.location.pathname.startsWith('/anime'))\n    setShowFooter(history.location.pathname !== '/register')\n    return history.listen(() => {\n      setShowNavbar(history.location.pathname === '/' ||\n      history.location.pathname.startsWith('/anime'))\n      setShowFooter(history.location.pathname !== '/register')\n      if(!(history.location.pathname.startsWith('/anime') && history.location.pathname.split('/')[3])) {\n        window.scrollTo(0, 0)\n      }\n    })\n  }, [history])\n\n  return (\n    <div>\n      {showNavbar && <Navbar/>}\n      <div className='app-content-wrapper'>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/register'>\n            <Register />\n          </Route>\n          <Route exact path='/anime/:id'>\n            <Anime />\n          </Route>\n          <Route exact path='/anime/:id/:menu'>\n            <Anime />\n          </Route>\n          <Route exact path='/animes'>\n            <Animes />\n          </Route>\n        </Switch>\n      </div>\n      {showFooter && <Footer />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\nimport './index.css';\nimport store from 'store'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}